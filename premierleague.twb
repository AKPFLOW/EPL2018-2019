<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Compare goal with' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Wilfred Ndidi&quot;'>
        <calculation class='tableau' formula='&quot;Wilfred Ndidi&quot;' />
        <members>
          <member value='&quot;Aaron Cresswell&quot;' />
          <member value='&quot;Aaron Lennon&quot;' />
          <member value='&quot;Aaron Mooy&quot;' />
          <member value='&quot;Aaron Ramsey&quot;' />
          <member value='&quot;Aaron Rowe&quot;' />
          <member value='&quot;Aaron Wan-Bissaka&quot;' />
          <member value='&quot;Abdelhamid Sabiri&quot;' />
          <member value='&quot;Abdoulaye Doucouré&quot;' />
          <member value='&quot;Aboubakar Kamara&quot;' />
          <member value='&quot;Adam Lallana&quot;' />
          <member value='&quot;Adam Masina&quot;' />
          <member value='&quot;Adam Smith&quot;' />
          <member value='&quot;Adama Diakhaby&quot;' />
          <member value='&quot;Adama Traoré&quot;' />
          <member value='&quot;Ademola Lookman&quot;' />
          <member value='&quot;Adrian Mariappa&quot;' />
          <member value='&quot;Adrien Silva&quot;' />
          <member value='&quot;Ainsley Maitland-Niles&quot;' />
          <member value='&quot;Alberto Moreno&quot;' />
          <member value='&quot;Aleksandar Mitrovic&quot;' />
          <member value='&quot;Alex Iwobi&quot;' />
          <member value='&quot;Alex McCarthy&quot;' />
          <member value='&quot;Alex Oxlade-Chamberlain&quot;' />
          <member value='&quot;Alex Pritchard&quot;' />
          <member value='&quot;Alexander Sørloth&quot;' />
          <member value='&quot;Alexandre Lacazette&quot;' />
          <member value='&quot;Alexis Sánchez&quot;' />
          <member value='&quot;Alfie Mawson&quot;' />
          <member value='&quot;Alireza Jahanbakhsh&quot;' />
          <member value='&quot;Alisson&quot;' />
          <member value='&quot;Álvaro Morata&quot;' />
          <member value='&quot;Ander Herrera&quot;' />
          <member value='&quot;André Gomes&quot;' />
          <member value='&quot;Andre Gray&quot;' />
          <member value='&quot;André Schürrle&quot;' />
          <member value='&quot;Andre-Frank Zambo Anguissa&quot;' />
          <member value='&quot;Andreas Christensen&quot;' />
          <member value='&quot;Andreas Pereira&quot;' />
          <member value='&quot;Andrew Robertson&quot;' />
          <member value='&quot;Andrew Surman&quot;' />
          <member value='&quot;Andriy Yarmolenko&quot;' />
          <member value='&quot;Andros Townsend&quot;' />
          <member value='&quot;Andy Carroll&quot;' />
          <member value='&quot;Angel Gomes&quot;' />
          <member value='&quot;Angelo Ogbonna&quot;' />
          <member value='&quot;Angus Gunn&quot;' />
          <member value='&quot;Anthony Knockaert&quot;' />
          <member value='&quot;Anthony Martial&quot;' />
          <member value='&quot;Antonio Barreca&quot;' />
          <member value='&quot;Antonio Rüdiger&quot;' />
          <member value='&quot;Antonio Valencia&quot;' />
          <member value='&quot;Aron Gunnarsson&quot;' />
          <member value='&quot;Arthur Masuaku&quot;' />
          <member value='&quot;Artur Boruc&quot;' />
          <member value='&quot;Ashley Barnes&quot;' />
          <member value='&quot;Ashley Westwood&quot;' />
          <member value='&quot;Ashley Young&quot;' />
          <member value='&quot;Asmir Begovic&quot;' />
          <member value='&quot;Aymeric Laporte&quot;' />
          <member value='&quot;Ayoze Pérez&quot;' />
          <member value='&quot;Bakary Sako&quot;' />
          <member value='&quot;Ben Chilwell&quot;' />
          <member value='&quot;Ben Davies&quot;' />
          <member value='&quot;Ben Foster&quot;' />
          <member value='&quot;Ben Gibson&quot;' />
          <member value='&quot;Ben Hamer&quot;' />
          <member value='&quot;Ben Johnson&quot;' />
          <member value='&quot;Ben Mee&quot;' />
          <member value='&quot;Ben Wilmot&quot;' />
          <member value='&quot;Benjamin Mendy&quot;' />
          <member value='&quot;Beram Kayal&quot;' />
          <member value='&quot;Bernard&quot;' />
          <member value='&quot;Bernardo&quot;' />
          <member value='&quot;Bernardo Silva&quot;' />
          <member value='&quot;Bernd Leno&quot;' />
          <member value='&quot;Bobby Reid&quot;' />
          <member value='&quot;Bruno&quot;' />
          <member value='&quot;Bruno Ecuele Manga&quot;' />
          <member value='&quot;Bukayo Saka&quot;' />
          <member value='&quot;Çaglar Söyüncü&quot;' />
          <member value='&quot;Callum Hudson-Odoi&quot;' />
          <member value='&quot;Callum Paterson&quot;' />
          <member value='&quot;Callum Slattery&quot;' />
          <member value='&quot;Callum Wilson&quot;' />
          <member value='&quot;Calum Chambers&quot;' />
          <member value='&quot;Carl Jenkinson&quot;' />
          <member value='&quot;Carlos Sánchez&quot;' />
          <member value='&quot;Cédric Soares&quot;' />
          <member value='&quot;Cenk Tosun&quot;' />
          <member value='&quot;César Azpilicueta&quot;' />
          <member value='&quot;Cesc Fàbregas&quot;' />
          <member value='&quot;Charlie Austin&quot;' />
          <member value='&quot;Charlie Daniels&quot;' />
          <member value='&quot;Charlie Taylor&quot;' />
          <member value='&quot;Cheikhou Kouyaté&quot;' />
          <member value='&quot;Chris Löwe&quot;' />
          <member value='&quot;Chris Mepham&quot;' />
          <member value='&quot;Chris Smalling&quot;' />
          <member value='&quot;Chris Wood&quot;' />
          <member value='&quot;Christian Atsu&quot;' />
          <member value='&quot;Christian Benteke&quot;' />
          <member value='&quot;Christian Eriksen&quot;' />
          <member value='&quot;Christian Fuchs&quot;' />
          <member value='&quot;Christian Kabasele&quot;' />
          <member value='&quot;Christopher Schindler&quot;' />
          <member value='&quot;Ciaran Clark&quot;' />
          <member value='&quot;Collin Quaner&quot;' />
          <member value='&quot;Connor Wickham&quot;' />
          <member value='&quot;Conor Coady&quot;' />
          <member value='&quot;Craig Cathcart&quot;' />
          <member value='&quot;Cyrus Christie&quot;' />
          <member value='&quot;Dale Stephens&quot;' />
          <member value='&quot;Dan Gosling&quot;' />
          <member value='&quot;Daniel Amartey&quot;' />
          <member value='&quot;Daniel Sturridge&quot;' />
          <member value='&quot;Danilo&quot;' />
          <member value='&quot;Danny Ings&quot;' />
          <member value='&quot;Danny Rose&quot;' />
          <member value='&quot;Danny Simpson&quot;' />
          <member value='&quot;Danny Ward&quot;' />
          <member value='&quot;Danny Welbeck&quot;' />
          <member value='&quot;Danny Williams&quot;' />
          <member value='&quot;Daryl Janmaat&quot;' />
          <member value='&quot;David Brooks&quot;' />
          <member value='&quot;David Button&quot;' />
          <member value='&quot;David de Gea&quot;' />
          <member value='&quot;David Luiz&quot;' />
          <member value='&quot;David Silva&quot;' />
          <member value='&quot;Davide Zappacosta&quot;' />
          <member value='&quot;Davinson Sánchez&quot;' />
          <member value='&quot;Davy Pröpper&quot;' />
          <member value='&quot;DeAndre Yedlin&quot;' />
          <member value='&quot;Declan Rice&quot;' />
          <member value='&quot;Dejan Lovren&quot;' />
          <member value='&quot;Dele Alli&quot;' />
          <member value='&quot;Demarai Gray&quot;' />
          <member value='&quot;Demeaco Duhaney&quot;' />
          <member value='&quot;Denis Odoi&quot;' />
          <member value='&quot;Denis Suárez&quot;' />
          <member value='&quot;Diego Rico&quot;' />
          <member value='&quot;Diogo Dalot&quot;' />
          <member value='&quot;Diogo Jota&quot;' />
          <member value='&quot;Divock Origi&quot;' />
          <member value='&quot;Domingos Quina&quot;' />
          <member value='&quot;Dominic Calvert-Lewin&quot;' />
          <member value='&quot;Dominic Solanke&quot;' />
          <member value='&quot;Dwight McNeil&quot;' />
          <member value='&quot;Eddie Nketiah&quot;' />
          <member value='&quot;Eden Hazard&quot;' />
          <member value='&quot;Ederson&quot;' />
          <member value='&quot;Elias Kachunga&quot;' />
          <member value='&quot;Emerson Hyndman&quot;' />
          <member value='&quot;Emerson Palmieri&quot;' />
          <member value='&quot;Eric Bailly&quot;' />
          <member value='&quot;Eric Dier&quot;' />
          <member value='&quot;Erik Durm&quot;' />
          <member value='&quot;Érik Lamela&quot;' />
          <member value='&quot;Étienne Capoue&quot;' />
          <member value='&quot;Fabián Balbuena&quot;' />
          <member value='&quot;Fabian Delph&quot;' />
          <member value='&quot;Fabian Schär&quot;' />
          <member value='&quot;Fabinho&quot;' />
          <member value='&quot;Fabricio&quot;' />
          <member value='&quot;Federico Fernández&quot;' />
          <member value='&quot;Felipe Anderson&quot;' />
          <member value='&quot;Fernandinho&quot;' />
          <member value='&quot;Fernando Llorente&quot;' />
          <member value='&quot;Florent Hadergjonaj&quot;' />
          <member value='&quot;Florian Lejeune&quot;' />
          <member value='&quot;Florin Andone&quot;' />
          <member value='&quot;Floyd Ayité&quot;' />
          <member value='&quot;Fousseni Diabaté&quot;' />
          <member value='&quot;Fraser Forster&quot;' />
          <member value='&quot;Fred&quot;' />
          <member value='&quot;Gabriel Jesus&quot;' />
          <member value='&quot;Gaëtan Bong&quot;' />
          <member value='&quot;Gary Cahill&quot;' />
          <member value='&quot;Gary Madine&quot;' />
          <member value='&quot;Georges-Kévin N&apos;Koudou&quot;' />
          <member value='&quot;Georginio Wijnaldum&quot;' />
          <member value='&quot;Gerard Deulofeu&quot;' />
          <member value='&quot;Glenn Murray&quot;' />
          <member value='&quot;Gonzalo Higuaín&quot;' />
          <member value='&quot;Grady Diangana&quot;' />
          <member value='&quot;Granit Xhaka&quot;' />
          <member value='&quot;Greg Cunningham&quot;' />
          <member value='&quot;Gylfi Sigurðsson&quot;' />
          <member value='&quot;Hamza Choudhury&quot;' />
          <member value='&quot;Harry Arter&quot;' />
          <member value='&quot;Harry Kane&quot;' />
          <member value='&quot;Harry Maguire&quot;' />
          <member value='&quot;Harry Winks&quot;' />
          <member value='&quot;Harvey Barnes&quot;' />
          <member value='&quot;Harvey Elliot&quot;' />
          <member value='&quot;Håvard Nordtveit&quot;' />
          <member value='&quot;Héctor Bellerín&quot;' />
          <member value='&quot;Hélder Costa&quot;' />
          <member value='&quot;Henrikh Mkhitaryan&quot;' />
          <member value='&quot;Hugo Lloris&quot;' />
          <member value='&quot;Ibrahima Cissé&quot;' />
          <member value='&quot;Idrissa Gana Gueye&quot;' />
          <member value='&quot;Ilkay Gündogan&quot;' />
          <member value='&quot;Isaac Hayden&quot;' />
          <member value='&quot;Isaac Mbenza&quot;' />
          <member value='&quot;Isaac Success&quot;' />
          <member value='&quot;Issa Diop&quot;' />
          <member value='&quot;Ivan Cavaleiro&quot;' />
          <member value='&quot;Jack Cork&quot;' />
          <member value='&quot;Jack Simpson&quot;' />
          <member value='&quot;Jack Stephens&quot;' />
          <member value='&quot;Jack Wilshere&quot;' />
          <member value='&quot;Jacob Murphy&quot;' />
          <member value='&quot;Jamaal Lascelles&quot;' />
          <member value='&quot;James Garner&quot;' />
          <member value='&quot;James Maddison&quot;' />
          <member value='&quot;James McArthur&quot;' />
          <member value='&quot;James McCarthy&quot;' />
          <member value='&quot;James Milner&quot;' />
          <member value='&quot;James Tarkowski&quot;' />
          <member value='&quot;James Tomkins&quot;' />
          <member value='&quot;James Ward-Prowse&quot;' />
          <member value='&quot;Jamie Vardy&quot;' />
          <member value='&quot;Jan Bednarek&quot;' />
          <member value='&quot;Jan Vertonghen&quot;' />
          <member value='&quot;Jannik Vestergaard&quot;' />
          <member value='&quot;Jason Puncheon&quot;' />
          <member value='&quot;Javier Hernández&quot;' />
          <member value='&quot;Javier Manquillo&quot;' />
          <member value='&quot;Jazz Richards&quot;' />
          <member value='&quot;Jean Seri&quot;' />
          <member value='&quot;Jeff Hendrick&quot;' />
          <member value='&quot;Jefferson Lerma&quot;' />
          <member value='&quot;Jeffrey Schlupp&quot;' />
          <member value='&quot;Jermain Defoe&quot;' />
          <member value='&quot;Jesse Lingard&quot;' />
          <member value='&quot;João Moutinho&quot;' />
          <member value='&quot;Joe Bennett&quot;' />
          <member value='&quot;Joe Bryan&quot;' />
          <member value='&quot;Joe Gomez&quot;' />
          <member value='&quot;Joe Hart&quot;' />
          <member value='&quot;Joe Ralls&quot;' />
          <member value='&quot;Joe Willock&quot;' />
          <member value='&quot;Joel Coleman&quot;' />
          <member value='&quot;Joël Matip&quot;' />
          <member value='&quot;Joel Ward&quot;' />
          <member value='&quot;Jóhann Berg Guðmundsson&quot;' />
          <member value='&quot;John Ruddy&quot;' />
          <member value='&quot;John Stones&quot;' />
          <member value='&quot;Jon Gorenc Stankovic&quot;' />
          <member value='&quot;Jonas Lössl&quot;' />
          <member value='&quot;Jonathan Hogg&quot;' />
          <member value='&quot;Jonjo Shelvey&quot;' />
          <member value='&quot;Jonjoe Kenny&quot;' />
          <member value='&quot;Jonny Castro&quot;' />
          <member value='&quot;Jonny Evans&quot;' />
          <member value='&quot;Jordan Ayew&quot;' />
          <member value='&quot;Jordan Henderson&quot;' />
          <member value='&quot;Jordan Pickford&quot;' />
          <member value='&quot;Jordon Ibe&quot;' />
          <member value='&quot;Jorginho&quot;' />
          <member value='&quot;José Holebas&quot;' />
          <member value='&quot;José Izquierdo&quot;' />
          <member value='&quot;Joselu&quot;' />
          <member value='&quot;Josh Murphy&quot;' />
          <member value='&quot;Josh Sims&quot;' />
          <member value='&quot;Joshua King&quot;' />
          <member value='&quot;Juan Foyth&quot;' />
          <member value='&quot;Juan Mata&quot;' />
          <member value='&quot;Julián Speroni&quot;' />
          <member value='&quot;Juninho Bacuna&quot;' />
          <member value='&quot;Junior Hoilett&quot;' />
          <member value='&quot;Junior Stanislas&quot;' />
          <member value='&quot;Jürgen Locadia&quot;' />
          <member value='&quot;Kadeem Harris&quot;' />
          <member value='&quot;Karlan Ahearne-Grant&quot;' />
          <member value='&quot;Kasper Schmeichel&quot;' />
          <member value='&quot;Kayne Ramsey&quot;' />
          <member value='&quot;Kelechi Iheanacho&quot;' />
          <member value='&quot;Ken Sema&quot;' />
          <member value='&quot;Kenedy&quot;' />
          <member value='&quot;Kenneth Zohore&quot;' />
          <member value='&quot;Kepa Arrizabalaga&quot;' />
          <member value='&quot;Kevin De Bruyne&quot;' />
          <member value='&quot;Kevin Long&quot;' />
          <member value='&quot;Kevin McDonald&quot;' />
          <member value='&quot;Ki Sung-yueng&quot;' />
          <member value='&quot;Kieran Trippier&quot;' />
          <member value='&quot;Kiko Femenía&quot;' />
          <member value='&quot;Konstantinos Mavropanos&quot;' />
          <member value='&quot;Kurt Zouma&quot;' />
          <member value='&quot;Kyle Walker&quot;' />
          <member value='&quot;Kyle Walker-Peters&quot;' />
          <member value='&quot;Laurent Depoitre&quot;' />
          <member value='&quot;Laurent Koscielny&quot;' />
          <member value='&quot;Lazar Markovic&quot;' />
          <member value='&quot;Leander Dendoncker&quot;' />
          <member value='&quot;Leandro Bacuna&quot;' />
          <member value='&quot;Lee Peltier&quot;' />
          <member value='&quot;Leighton Baines&quot;' />
          <member value='&quot;Léo Bonatini&quot;' />
          <member value='&quot;Leon Balogun&quot;' />
          <member value='&quot;Leroy Sané&quot;' />
          <member value='&quot;Lewis Cook&quot;' />
          <member value='&quot;Lewis Dunk&quot;' />
          <member value='&quot;Loïc Damour&quot;' />
          <member value='&quot;Lucas Digne&quot;' />
          <member value='&quot;Lucas Moura&quot;' />
          <member value='&quot;Lucas Pérez&quot;' />
          <member value='&quot;Lucas Torreira&quot;' />
          <member value='&quot;Luciano Vietto&quot;' />
          <member value='&quot;Luka Milivojevic&quot;' />
          <member value='&quot;Lukasz Fabianski&quot;' />
          <member value='&quot;Luke Amos&quot;' />
          <member value='&quot;Luke Dreher&quot;' />
          <member value='&quot;Luke Shaw&quot;' />
          <member value='&quot;Lys Mousset&quot;' />
          <member value='&quot;Mamadou Sakho&quot;' />
          <member value='&quot;Manolo Gabbiadini&quot;' />
          <member value='&quot;Manuel Lanzini&quot;' />
          <member value='&quot;Marc Albrighton&quot;' />
          <member value='&quot;Marc Navarro&quot;' />
          <member value='&quot;Marcos Alonso&quot;' />
          <member value='&quot;Marcos Rojo&quot;' />
          <member value='&quot;Marcus Bettinelli&quot;' />
          <member value='&quot;Marcus Rashford&quot;' />
          <member value='&quot;Mario Lemina&quot;' />
          <member value='&quot;Mark Noble&quot;' />
          <member value='&quot;Mark Travers&quot;' />
          <member value='&quot;Marko Arnautovic&quot;' />
          <member value='&quot;Marouane Fellaini&quot;' />
          <member value='&quot;Martin Dúbravka&quot;' />
          <member value='&quot;Martin Kelly&quot;' />
          <member value='&quot;Martín Montoya&quot;' />
          <member value='&quot;Mason Greenwood&quot;' />
          <member value='&quot;Mason Holgate&quot;' />
          <member value='&quot;Matej Vydra&quot;' />
          <member value='&quot;Mateo Kovacic&quot;' />
          <member value='&quot;Mathew Ryan&quot;' />
          <member value='&quot;Mathias Jørgensen&quot;' />
          <member value='&quot;Matt Doherty&quot;' />
          <member value='&quot;Matt Ritchie&quot;' />
          <member value='&quot;Matt Targett&quot;' />
          <member value='&quot;Matteo Darmian&quot;' />
          <member value='&quot;Mattéo Guendouzi&quot;' />
          <member value='&quot;Matthew Lowton&quot;' />
          <member value='&quot;Matty Daly&quot;' />
          <member value='&quot;Max Kilman&quot;' />
          <member value='&quot;Max Meyer&quot;' />
          <member value='&quot;Maxime Le Marchand&quot;' />
          <member value='&quot;Maya Yoshida&quot;' />
          <member value='&quot;Mesut Özil&quot;' />
          <member value='&quot;Michael Keane&quot;' />
          <member value='&quot;Michael Obafemi&quot;' />
          <member value='&quot;Michail Antonio&quot;' />
          <member value='&quot;Michel Vorm&quot;' />
          <member value='&quot;Michy Batshuayi&quot;' />
          <member value='&quot;Miguel Almirón&quot;' />
          <member value='&quot;Miguel Britos&quot;' />
          <member value='&quot;Mohamed Diamé&quot;' />
          <member value='&quot;Mohamed Elneny&quot;' />
          <member value='&quot;Mohamed Elyounoussi&quot;' />
          <member value='&quot;Mohamed Salah&quot;' />
          <member value='&quot;Morgan Gibbs-White&quot;' />
          <member value='&quot;Morgan Schneiderlin&quot;' />
          <member value='&quot;Mousa Dembélé&quot;' />
          <member value='&quot;Moussa Sissoko&quot;' />
          <member value='&quot;N&apos;Golo Kanté&quot;' />
          <member value='&quot;Naby Keïta&quot;' />
          <member value='&quot;Nacho Monreal&quot;' />
          <member value='&quot;Nampalys Mendy&quot;' />
          <member value='&quot;Nathan Aké&quot;' />
          <member value='&quot;Nathan Redmond&quot;' />
          <member value='&quot;Nathaniel Chalobah&quot;' />
          <member value='&quot;Nathaniel Clyne&quot;' />
          <member value='&quot;Nathaniel Mendez-Laing&quot;' />
          <member value='&quot;Neeskens Kebano&quot;' />
          <member value='&quot;Neil Etheridge&quot;' />
          <member value='&quot;Nemanja Matic&quot;' />
          <member value='&quot;Nicolás Otamendi&quot;' />
          <member value='&quot;Oleksandr Zinchenko&quot;' />
          <member value='&quot;Oliver Skipp&quot;' />
          <member value='&quot;Olivier Giroud&quot;' />
          <member value='&quot;Oriol Romeu&quot;' />
          <member value='&quot;Oumar Niasse&quot;' />
          <member value='&quot;Pablo Zabaleta&quot;' />
          <member value='&quot;Pape Souaré&quot;' />
          <member value='&quot;Pascal Groß&quot;' />
          <member value='&quot;Patrick van Aanholt&quot;' />
          <member value='&quot;Paul Dummett&quot;' />
          <member value='&quot;Paul Pogba&quot;' />
          <member value='&quot;Paulo Gazzaniga&quot;' />
          <member value='&quot;Pedro&quot;' />
          <member value='&quot;Pedro Obiang&quot;' />
          <member value='&quot;Peter Crouch&quot;' />
          <member value='&quot;Petr Cech&quot;' />
          <member value='&quot;Phil Bardsley&quot;' />
          <member value='&quot;Phil Foden&quot;' />
          <member value='&quot;Phil Jagielka&quot;' />
          <member value='&quot;Phil Jones&quot;' />
          <member value='&quot;Philip Billing&quot;' />
          <member value='&quot;Pierre Højbjerg&quot;' />
          <member value='&quot;Pierre-Emerick Aubameyang&quot;' />
          <member value='&quot;Rachid Ghezzal&quot;' />
          <member value='&quot;Rafael Camacho&quot;' />
          <member value='&quot;Raheem Sterling&quot;' />
          <member value='&quot;Rajiv van La Parra&quot;' />
          <member value='&quot;Ramadan Sobhi&quot;' />
          <member value='&quot;Raúl Jiménez&quot;' />
          <member value='&quot;Rhys Healey&quot;' />
          <member value='&quot;Ricardo Pereira&quot;' />
          <member value='&quot;Richarlison&quot;' />
          <member value='&quot;Riyad Mahrez&quot;' />
          <member value='&quot;Rob Holding&quot;' />
          <member value='&quot;Robbie Brady&quot;' />
          <member value='&quot;Robert Snodgrass&quot;' />
          <member value='&quot;Roberto Firmino&quot;' />
          <member value='&quot;Roberto Pereyra&quot;' />
          <member value='&quot;Romain Saïss&quot;' />
          <member value='&quot;Romelu Lukaku&quot;' />
          <member value='&quot;Ross Barkley&quot;' />
          <member value='&quot;Ruben Loftus-Cheek&quot;' />
          <member value='&quot;Rúben Neves&quot;' />
          <member value='&quot;Rúben Vinagre&quot;' />
          <member value='&quot;Rui Patrício&quot;' />
          <member value='&quot;Ryan Babel&quot;' />
          <member value='&quot;Ryan Bennett&quot;' />
          <member value='&quot;Ryan Bertrand&quot;' />
          <member value='&quot;Ryan Fraser&quot;' />
          <member value='&quot;Ryan Fredericks&quot;' />
          <member value='&quot;Ryan Sessegnon&quot;' />
          <member value='&quot;Sadio Mané&quot;' />
          <member value='&quot;Salomón Rondón&quot;' />
          <member value='&quot;Sam Gallagher&quot;' />
          <member value='&quot;Sam Surridge&quot;' />
          <member value='&quot;Sam Vokes&quot;' />
          <member value='&quot;Samir Nasri&quot;' />
          <member value='&quot;Scott Dann&quot;' />
          <member value='&quot;Scott McTominay&quot;' />
          <member value='&quot;Sead Kolašinac&quot;' />
          <member value='&quot;Séamus Coleman&quot;' />
          <member value='&quot;Sean Longstaff&quot;' />
          <member value='&quot;Sean Morrison&quot;' />
          <member value='&quot;Sebastian Prödl&quot;' />
          <member value='&quot;Serge Aurier&quot;' />
          <member value='&quot;Sergio Agüero&quot;' />
          <member value='&quot;Sergio Rico&quot;' />
          <member value='&quot;Shane Duffy&quot;' />
          <member value='&quot;Shane Long&quot;' />
          <member value='&quot;Shinji Okazaki&quot;' />
          <member value='&quot;Shkodran Mustafi&quot;' />
          <member value='&quot;Simon Francis&quot;' />
          <member value='&quot;Sokratis Papastathopoulos&quot;' />
          <member value='&quot;Sol Bamba&quot;' />
          <member value='&quot;Solly March&quot;' />
          <member value='&quot;Son Heung-min&quot;' />
          <member value='&quot;Stefan Johansen&quot;' />
          <member value='&quot;Stefano Okaka&quot;' />
          <member value='&quot;Stephan Lichtsteiner&quot;' />
          <member value='&quot;Stephen Ward&quot;' />
          <member value='&quot;Steve Cook&quot;' />
          <member value='&quot;Steve Mounié&quot;' />
          <member value='&quot;Steven Davis&quot;' />
          <member value='&quot;Steven Defour&quot;' />
          <member value='&quot;Stuart Armstrong&quot;' />
          <member value='&quot;Tahith Chong&quot;' />
          <member value='&quot;Terence Kongolo&quot;' />
          <member value='&quot;Theo Walcott&quot;' />
          <member value='&quot;Tim Ream&quot;' />
          <member value='&quot;Timothy Fosu-Mensah&quot;' />
          <member value='&quot;Toby Alderweireld&quot;' />
          <member value='&quot;Tom Cairney&quot;' />
          <member value='&quot;Tom Cleverley&quot;' />
          <member value='&quot;Tom Davies&quot;' />
          <member value='&quot;Tom Heaton&quot;' />
          <member value='&quot;Tommy Smith&quot;' />
          <member value='&quot;Trent Alexander-Arnold&quot;' />
          <member value='&quot;Troy Deeney&quot;' />
          <member value='&quot;Tyreke Johnson&quot;' />
          <member value='&quot;Tyrone Mings&quot;' />
          <member value='&quot;Vicente Guaita&quot;' />
          <member value='&quot;Vicente Iborra&quot;' />
          <member value='&quot;Víctor Camarasa&quot;' />
          <member value='&quot;Victor Lindelöf&quot;' />
          <member value='&quot;Victor Moses&quot;' />
          <member value='&quot;Victor Wanyama&quot;' />
          <member value='&quot;Vincent Janssen&quot;' />
          <member value='&quot;Vincent Kompany&quot;' />
          <member value='&quot;Virgil van Dijk&quot;' />
          <member value='&quot;Wayne Hennessey&quot;' />
          <member value='&quot;Wes Morgan&quot;' />
          <member value='&quot;Wesley Hoedt&quot;' />
          <member value='&quot;Wilfred Ndidi&quot;' />
          <member value='&quot;Wilfried Zaha&quot;' />
          <member value='&quot;Will Hughes&quot;' />
          <member value='&quot;Will Norris&quot;' />
          <member value='&quot;Willian&quot;' />
          <member value='&quot;Willy Boly&quot;' />
          <member value='&quot;Willy Caballero&quot;' />
          <member value='&quot;Xande Silva&quot;' />
          <member value='&quot;Xherdan Shaqiri&quot;' />
          <member value='&quot;Yann Valery&quot;' />
          <member value='&quot;Yerry Mina&quot;' />
          <member value='&quot;Yoshinori Muto&quot;' />
          <member value='&quot;Youri Tielemans&quot;' />
          <member value='&quot;Yves Bissouma&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='dataplayer' inline='true' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dataplayer' name='textscan.1ra5ci11351mck1e7pfkq0tvx2nu'>
            <connection class='textscan' directory='C:/data-for-datavis/premier' filename='dataplayer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ra5ci11351mck1e7pfkq0tvx2nu' name='dataplayer.csv' table='[dataplayer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Index' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Position' ordinal='3' />
            <column datatype='string' name='Club' ordinal='4' />
            <column datatype='integer' name='Age' ordinal='5' />
            <column datatype='integer' name='Apps' ordinal='6' />
            <column datatype='integer' name='Starts' ordinal='7' />
            <column datatype='integer' name='Sub' ordinal='8' />
            <column datatype='integer' name='Mins' ordinal='9' />
            <column datatype='integer' name='Mins/Apps' ordinal='10' />
            <column datatype='integer' name='Gls' ordinal='11' />
            <column datatype='integer' name='Ast' ordinal='12' />
            <column datatype='integer' name='Gls-Pk' ordinal='13' />
            <column datatype='integer' name='Attempted-Pks' ordinal='14' />
            <column datatype='integer' name='Fouls' ordinal='15' />
            <column datatype='integer' name='CrdY' ordinal='16' />
            <column datatype='integer' name='CrdR' ordinal='17' />
            <column datatype='integer' name='SoT' ordinal='18' />
            <column datatype='real' name='Glsper90' ordinal='19' />
            <column datatype='real' name='GlsandAssper90' ordinal='20' />
            <column datatype='real' name='Gls-Pkper90' ordinal='21' />
            <column datatype='real' name='GlsandAss-Pkper90' ordinal='22' />
            <column datatype='real' name='SoTper90' ordinal='23' />
            <column datatype='real' name='Flsper90' ordinal='24' />
            <column datatype='real' name='Crdper90' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apps]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Apps</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Starts]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Starts</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sub]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Sub</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mins]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Mins</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mins/Apps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mins/Apps]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Mins/Apps</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gls]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Gls</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ast</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ast]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Ast</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gls-Pk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gls-Pk]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Gls-Pk</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attempted-Pks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Attempted-Pks]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Attempted-Pks</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fouls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fouls]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Fouls</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrdY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CrdY]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>CrdY</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrdR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CrdR]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>CrdR</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SoT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SoT]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>SoT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Glsper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Glsper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Glsper90</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GlsandAssper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GlsandAssper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>GlsandAssper90</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gls-Pkper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gls-Pkper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Gls-Pkper90</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GlsandAss-Pkper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GlsandAss-Pkper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>GlsandAss-Pkper90</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SoTper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SoTper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>SoTper90</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flsper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flsper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Flsper90</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crdper90</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crdper90]</local-name>
            <parent-name>[dataplayer.csv]</parent-name>
            <remote-alias>Crdper90</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]&quot;' value='Shot on Target' />
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Attempted-Pks:qk]&quot;' value='Attempted' />
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdR:qk]&quot;' value='Red Card' />
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:qk]&quot;' value='Yellow Card' />
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]&quot;' value='Penalty' />
          <alias key='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]&quot;' value='Goals' />
        </aliases>
      </column>
      <column datatype='integer' name='[Attempted-Pks]' role='measure' type='quantitative' />
      <column caption='Pk, Successful Ratio' datatype='real' name='[Calculation_710442907700011008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Gls-Pk]/[Attempted-Pks]) * 100' />
      </column>
      <column caption='Selected Player Goal' datatype='integer' name='[Calculation_710442907702833154]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{&#13;&#10;&#13;&#10;    SUM(&#13;&#10;            IF [Player] = [Parameters].[Parameter 1]&#13;&#10;            THEN [Gls]&#13;&#10;            ELSE 0&#13;&#10;END     )&#13;&#10;}' />
      </column>
      <column caption='Difference in Goal' datatype='integer' name='[Calculation_710442907703709699]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gls])- SUM([Calculation_710442907702833154])' />
      </column>
      <column caption='Message' datatype='string' name='[Calculation_710442907703943172]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_710442907703709699] &lt; 0&#13;&#10;THEN &quot;Scored&quot; +&#13;&#10;    STR(ROUND(ABS([Calculation_710442907703709699])))+  &quot;Goals less&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699] &gt;0&#13;&#10;THEN &quot;Scored&quot; +&#13;&#10;    STR(ROUND(ABS([Calculation_710442907703709699])))+ &quot;Goals more&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699]= 0&#13;&#10;AND ATTR([Player])=[Parameters].[Parameter 1]&#13;&#10;THEN &quot;Player being compared to&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699]= 0&#13;&#10;AND ATTR([Player])!=[Parameters].[Parameter 1]&#13;&#10;THEN &quot;Scored the same number of goals&quot;&#13;&#10;ELSEIF ISNULL([Calculation_710442907703709699])&#13;&#10;THEN &quot;N/A&quot;&#13;&#10;END' />
      </column>
      <column caption='Total Number of Cards' datatype='integer' name='[Calculation_710442907720986629]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[CrdR]  + [CrdY]' />
      </column>
      <column datatype='string' name='[Club]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
          <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
          <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;GERtr&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
          <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
          <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
          <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
          <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
          <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
          <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;ENG&quot;' value='52.355499999999999' />
          <semantic-value key='&quot;NIR&quot;' value='54.787700000000001' />
          <semantic-value key='&quot;SCO&quot;' value='56.490699999999997' />
          <semantic-value key='&quot;WAL&quot;' value='52.130699999999997' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;ENG&quot;' value='1.1742999999999999' />
          <semantic-value key='&quot;NIR&quot;' value='6.4923000000000002' />
          <semantic-value key='&quot;SCO&quot;' value='4.2026000000000003' />
          <semantic-value key='&quot;WAL&quot;' value='3.7837000000000001' />
        </semantic-values>
      </column>
      <column caption='Crd R' datatype='integer' name='[CrdR]' role='measure' type='quantitative' />
      <column caption='Crd Y' datatype='integer' name='[CrdY]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Gls-Pk]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Mins/Apps (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Mins/Apps]' peg='0' size='5.93' />
      </column>
      <column datatype='integer' name='[Mins/Apps]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column caption='So T' datatype='integer' name='[SoT]' role='measure' type='quantitative' />
      <column-instance column='[SoT]' derivation='Avg' name='[avg:SoT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
      <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[Attempted-Pks]' derivation='Sum' name='[sum:Attempted-Pks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CrdR]' derivation='Sum' name='[sum:CrdR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CrdY]' derivation='Sum' name='[sum:CrdY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gls-Pk]' derivation='Sum' name='[sum:Gls-Pk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Club)' hidden='true' name='[Action (Club)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Club]' />
        </groupfilter>
      </group>
      <group caption='Action (Player)' hidden='true' name='[Action (Player)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.214634' measure-ordering='alphabetic' measure-percentage='0.746341' parameter-percentage='0.0390244' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Player:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adam Masina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ander Herrera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arthur Masuaku&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bernardo Silva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Mepham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danny Rose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denis Odoi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fabián Balbuena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georginio Wijnaldum&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glenn Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isaac Hayden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Javier Hernández&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jon Gorenc Stankovic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Junior Hoilett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laurent Depoitre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luke Dreher&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matej Vydra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miguel Almirón&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicolás Otamendi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pierre Højbjerg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pierre-Emerick Aubameyang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Bennett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shane Duffy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theo Walcott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wayne Hennessey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Cresswell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Mooy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Pritchard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Angel Gomes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben Hamer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cédric Soares&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conor Coady&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Davinson Sánchez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elias Kachunga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Floyd Ayité&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Håvard Nordtveit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James McArthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Hart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;José Izquierdo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kevin McDonald&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Loïc Damour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mario Lemina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maxime Le Marchand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nampalys Mendy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pedro Obiang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roberto Firmino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roberto Pereyra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scott McTominay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stephen Ward&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vicente Guaita&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yann Valery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aaron Wan-Bissaka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alfie Mawson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antonio Barreca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benjamin Mendy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bobby Reid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlie Daniels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dan Gosling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dejan Lovren&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eric Dier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaëtan Bong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hugo Lloris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jan Bednarek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joel Ward&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juan Foyth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Konstantinos Mavropanos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucas Torreira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin Kelly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Obafemi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nathaniel Clyne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phil Foden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ruben Loftus-Cheek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Morrison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steven Defour&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Víctor Camarasa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victor Wanyama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yves Bissouma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ademola Lookman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andre-Frank Zambo Anguissa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asmir Begovic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bukayo Saka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christian Benteke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danny Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diogo Jota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fabricio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Granit Xhaka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ivan Cavaleiro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James Maddison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeff Hendrick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jesse Lingard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonjoe Kenny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kasper Schmeichel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leandro Bacuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manolo Gabbiadini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matt Doherty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mohamed Elyounoussi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oriol Romeu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rajiv van La Parra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ryan Sessegnon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Simon Francis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tom Cairney&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilfried Zaha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adam Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;André Gomes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Artur Boruc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bernd Leno&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Smalling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Danny Simpson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denis Suárez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fabian Delph&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gerard Deulofeu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harry Kane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isaac Mbenza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Javier Manquillo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jonas Lössl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jürgen Locadia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laurent Koscielny&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luke Shaw&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mateo Kovacic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miguel Britos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oleksandr Zinchenko&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paul Pogba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rachid Ghezzal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Bertrand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shane Long&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Ream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wes Morgan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abdelhamid Sabiri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alireza Jahanbakhsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Rüdiger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beram Kayal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlie Taylor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Daniel Amartey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Danny Ings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dele Alli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erik Durm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gary Cahill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ibrahima Cissé&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jan Vertonghen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jóhann Berg Guðmundsson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juan Mata&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kurt Zouma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luciano Vietto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luka Milivojevic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martín Montoya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michail Antonio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neeskens Kebano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phil Jagielka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rúben Vinagre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sebastian Prödl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuart Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vincent Janssen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alex McCarthy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andros Townsend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carl Jenkinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Collin Quaner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;David Silva&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eddie Nketiah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florian Lejeune&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harvey Barnes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaal Lascelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joe Bryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordon Ibe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kevin De Bruyne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Cook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marcus Bettinelli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Max Kilman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Naby Keïta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nathaniel Mendez-Laing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paulo Gazzaniga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robbie Brady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samir Nasri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stefano Okaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tyreke Johnson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xande Silva&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Lennon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aleksandar Mitrovic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alexander Sørloth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angelo Ogbonna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cenk Tosun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Cathcart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Davy Pröpper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Emerson Hyndman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fousseni Diabaté&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Héctor Bellerín&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James McCarthy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Willock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joselu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ki Sung-yueng&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lucas Digne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Travers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maya Yoshida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Aké&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peter Crouch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romain Saïss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rúben Neves&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sead Kolašinac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steve Cook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vicente Iborra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yerry Mina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alberto Moreno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andrew Surman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ben Chilwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Callum Slattery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlie Austin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Schindler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David de Gea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominic Solanke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fernando Llorente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harry Maguire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jack Wilshere&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;João Moutinho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan Henderson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenneth Zohore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leon Balogun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcos Alonso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marko Arnautovic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matthew Lowton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moussa Sissoko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patrick van Aanholt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richarlison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sam Surridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Son Heung-min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tommy Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willy Boly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Abdoulaye Doucouré&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alisson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antonio Valencia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bernard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheikhou Kouyaté&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Daniel Sturridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Demarai Gray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eden Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Érik Lamela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gary Madine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Idrissa Gana Gueye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jannik Vestergaard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Ruddy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joshua King&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julián Speroni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Walker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lukasz Fabianski&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mason Greenwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michel Vorm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neil Etheridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phil Jones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rui Patrício&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serge Aurier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tahith Chong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vincent Kompany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adrian Mariappa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andreas Christensen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aymeric Laporte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Çaglar Söyüncü&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christian Eriksen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daryl Janmaat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Divock Origi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Federico Fernández&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Cunningham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jack Cork&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jefferson Lerma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jonny Castro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jorginho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kayne Ramsey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lee Peltier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manuel Lanzini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matt Ritchie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matt Targett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Gibbs-White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oumar Niasse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ramadan Sobhi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sadio Mané&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sokratis Papastathopoulos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tom Cleverley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Will Hughes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adrien Silva&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andreas Pereira&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ayoze Pérez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Callum Hudson-Odoi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christian Fuchs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;David Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Domingos Quina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Felipe Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamza Choudhury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jack Simpson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeffrey Schlupp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jonny Evans&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Junior Stanislas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelechi Iheanacho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leighton Baines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marc Albrighton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Matteo Darmian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morgan Schneiderlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pablo Zabaleta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pascal Groß&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rhys Healey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salomón Rondón&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sol Bamba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tom Davies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Will Norris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alex Iwobi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andriy Yarmolenko&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Davies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calum Chambers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ciaran Clark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David Luiz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dwight McNeil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Florent Hadergjonaj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harry Winks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jacob Murphy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Bennett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Ralls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan Pickford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kepa Arrizabalaga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leroy Sané&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcos Rojo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matty Daly&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mohamed Salah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N&apos;Golo Kanté&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Dummett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Holding&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam Vokes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stefan Johansen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trent Alexander-Arnold&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willy Caballero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex Oxlade-Chamberlain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andy Carroll&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Gibson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlos Sánchez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Connor Wickham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Davide Zappacosta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ederson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Florin Andone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harvey Elliot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Garner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Gomez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;José Holebas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin Long&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis Dunk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marcus Rashford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Max Meyer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nacho Monreal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pedro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raúl Jiménez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riyad Mahrez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robert Snodgrass&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scott Dann&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stephan Lichtsteiner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyrone Mings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Xherdan Shaqiri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aboubakar Kamara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adama Diakhaby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andre Gray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashley Westwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bruno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Wood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danny Ward&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diego Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fabian Schär&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gonzalo Higuaín&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isaac Success&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;James Milner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jazz Richards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jonathan Hogg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kadeem Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lazar Markovic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lys Mousset&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mathew Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohamed Diamé&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oliver Skipp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rafael Camacho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Fraser&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shinji Okazaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timothy Fosu-Mensah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wesley Hoedt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adam Lallana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Álvaro Morata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aron Gunnarsson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bernardo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Löwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danilo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Demeaco Duhaney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Étienne Capoue&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabriel Jesus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georges-Kévin N&apos;Koudou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ilkay Gündogan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamie Vardy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jason Puncheon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Stones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juninho Bacuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Walker-Peters&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luke Amos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason Holgate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michy Batshuayi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nemanja Matic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philip Billing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ryan Babel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sergio Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Terence Kongolo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virgil van Dijk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Ramsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandre Lacazette&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angus Gunn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anthony Martial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ben Mee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;César Azpilicueta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyrus Christie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DeAndre Yedlin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Emerson Palmieri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fraser Forster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hélder Costa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Tarkowski&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Coleman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Josh Murphy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kieran Trippier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lucas Moura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marouane Fellaini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mesut Özil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nathan Redmond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Petr Cech&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romelu Lukaku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Séamus Coleman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sergio Agüero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steve Mounié&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victor Lindelöf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yoshinori Muto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ainsley Maitland-Niles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andrew Robertson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakary Sako&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Callum Paterson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christian Kabasele&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;David Button&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominic Calvert-Lewin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fernandinho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gylfi Sigurðsson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harry Arter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jack Stephens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jermain Defoe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan Ayew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ken Sema&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Léo Bonatini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marc Navarro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Noble&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mattéo Guendouzi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mousa Dembélé&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pape Souaré&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ricardo Pereira&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sam Gallagher&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solly March&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Heaton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adama Traoré&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;André Schürrle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashley Young&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bruno Ecuele Manga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Callum Wilson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christian Atsu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danny Welbeck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Diogo Dalot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fabinho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grady Diangana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Issa Diop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;James Ward-Prowse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jean Seri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonjo Shelvey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karlan Ahearne-Grant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leander Dendoncker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mamadou Sakho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mathias Jørgensen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mohamed Elneny&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olivier Giroud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raheem Sterling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Fredericks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shkodran Mustafi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Alderweireld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilfred Ndidi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aaron Rowe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexis Sánchez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Knockaert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ashley Barnes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ben Wilmot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cesc Fàbregas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dale Stephens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Declan Rice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Bailly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henrikh Mkhitaryan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Tomkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joël Matip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Josh Sims&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiko Femenía&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucas Pérez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martin Dúbravka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Keane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nathaniel Chalobah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phil Bardsley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ross Barkley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sean Longstaff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steven Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Deeney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Victor Moses&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Youri Tielemans&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Club:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brighton &amp; Hove Albion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tottenham Hotspur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wolverhampton Wanderers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Huddersfield Town&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leicester City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Ham United&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crystal Palace&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Newcastle United&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cardiff City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester United&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdR:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Attempted-Pks:qk]&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Compare goal with' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Wilfred Ndidi&quot;'>
          <calculation class='tableau' formula='&quot;Wilfred Ndidi&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Check out the &lt;[Club]&gt; homepage' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Team Embed URL' type='sheet' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Club]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Team Embed URL' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Team Embed URL' />
      </command>
    </action>
    <action caption='Check out more on &lt;[Player]&gt;' name='[Action3]'>
      <source dashboard='Team Embed URL' type='sheet'>
        <exclude-sheet name='Club Stats_ Goal' />
      </source>
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Player]&gt;' />
    </action>
    <action caption='Check out &lt;[Player]&gt; Stats' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard=' Player Embed URL ' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value=' Player Embed URL ' />
      </command>
    </action>
    <action caption='Check out more on &lt;[Player]&gt; 1' name='[Action6]'>
      <activation type='on-select' />
      <source dashboard=' Player Embed URL ' type='sheet' />
      <link caption='Check out more on &lt;[Player]&gt; 1' expression='https://en.wikipedia.org/wiki/&lt;[Player]&gt;' />
    </action>
    <datasources>
      <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
    </datasources>
    <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
      <column datatype='string' name='[Club]' role='dimension' type='nominal' />
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Club Card'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Disciplinary Profile </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column caption='Crd R' datatype='integer' name='[CrdR]' role='measure' type='quantitative' />
            <column caption='Crd Y' datatype='integer' name='[CrdY]' role='measure' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrdR]' derivation='Sum' name='[sum:CrdR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CrdY]' derivation='Sum' name='[sum:CrdY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Watford&quot;</bucket>
              <bucket>&quot;Manchester United&quot;</bucket>
              <bucket>&quot;Burnley&quot;</bucket>
              <bucket>&quot;Wolverhampton Wanderers&quot;</bucket>
              <bucket>&quot;Southampton&quot;</bucket>
              <bucket>&quot;Arsenal&quot;</bucket>
              <bucket>&quot;Fulham&quot;</bucket>
              <bucket>&quot;Cardiff City&quot;</bucket>
              <bucket>&quot;Brighton &amp; Hove Albion&quot;</bucket>
              <bucket>&quot;Leicester City&quot;</bucket>
              <bucket>&quot;Bournemouth&quot;</bucket>
              <bucket>&quot;West Ham United&quot;</bucket>
              <bucket>&quot;Tottenham Hotspur&quot;</bucket>
              <bucket>&quot;Newcastle United&quot;</bucket>
              <bucket>&quot;Huddersfield Town&quot;</bucket>
              <bucket>&quot;Everton&quot;</bucket>
              <bucket>&quot;Crystal Palace&quot;</bucket>
              <bucket>&quot;Chelsea&quot;</bucket>
              <bucket>&quot;Manchester City&quot;</bucket>
              <bucket>&quot;Liverpool&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]' scope='cols' value='Number of Cards' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Club Shot on Target '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shot on Target (Clubs)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column caption='So T' datatype='integer' name='[SoT]' role='measure' type='quantitative' />
            <column datatype='real' name='[SoTper90]' role='measure' type='quantitative' />
            <column-instance column='[SoT]' derivation='Avg' name='[avg:SoT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SoTper90]' derivation='Avg' name='[avg:SoTper90:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoTper90:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</rows>
        <cols>([federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk] + [federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoTper90:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Club Stats_ Assist'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of players who contributed assists</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Ast]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column-instance column='[Ast]' derivation='CountD' name='[ctd:Ast:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ast]' derivation='Sum' name='[sum:Ast:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Club)]'>
            <groupfilter function='level-members' level='[Club]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Ast:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Club)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Ast:qk]' scope='cols' value='Players with assist' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Ast:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Ast:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Ast:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Club Stats_ Fouls'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Club Foul Committed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Fouls]' role='measure' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fouls]' derivation='Sum' name='[sum:Fouls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='Fouls Committed' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' />
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' />
              <text column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Club Stats_ Goal'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Goals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Gls-Pk]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gls-Pk]' derivation='Sum' name='[sum:Gls-Pk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]&quot;</bucket>
              <bucket>&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Club)]'>
            <groupfilter function='level-members' level='[Club]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</column>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Club)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Club Stats_ Goalscorers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Goalscorers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
            <column-instance column='[Gls]' derivation='CountD' name='[ctd:Gls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Gls:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Gls:qk]' scope='cols' value='Number of Goal Scorers' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Gls:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Gls:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Gls:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comparing one players with other players (goals)'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare goal with' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Wilfred Ndidi&quot;'>
              <calculation class='tableau' formula='&quot;Wilfred Ndidi&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column caption='Selected Player Goal' datatype='integer' name='[Calculation_710442907702833154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{&#13;&#10;&#13;&#10;    SUM(&#13;&#10;            IF [Player] = [Parameters].[Parameter 1]&#13;&#10;            THEN [Gls]&#13;&#10;            ELSE 0&#13;&#10;END     )&#13;&#10;}' />
            </column>
            <column caption='Difference in Goal' datatype='integer' name='[Calculation_710442907703709699]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gls])- SUM([Calculation_710442907702833154])' />
            </column>
            <column caption='Message' datatype='string' name='[Calculation_710442907703943172]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_710442907703709699] &lt; 0&#13;&#10;THEN &quot;Scored&quot; +&#13;&#10;    STR(ROUND(ABS([Calculation_710442907703709699])))+  &quot;Goals less&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699] &gt;0&#13;&#10;THEN &quot;Scored&quot; +&#13;&#10;    STR(ROUND(ABS([Calculation_710442907703709699])))+ &quot;Goals more&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699]= 0&#13;&#10;AND ATTR([Player])=[Parameters].[Parameter 1]&#13;&#10;THEN &quot;Player being compared to&quot;&#13;&#10;ELSEIF [Calculation_710442907703709699]= 0&#13;&#10;AND ATTR([Player])!=[Parameters].[Parameter 1]&#13;&#10;THEN &quot;Scored the same number of goals&quot;&#13;&#10;ELSEIF ISNULL([Calculation_710442907703709699])&#13;&#10;THEN &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_710442907703709699]' derivation='User' name='[usr:Calculation_710442907703709699:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_710442907703943172]' derivation='User' name='[usr:Calculation_710442907703943172:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[usr:Calculation_710442907703709699:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk] / ([federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:ok] / [federated.1axwwpi0u661y2146jqkx1cu6qpt].[usr:Calculation_710442907703943172:nk]))</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[usr:Calculation_710442907703709699:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Penalty Attempted and Scored (Players)'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Attempted-Pks]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Gls-Pk]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Attempted-Pks]' derivation='Sum' name='[sum:Attempted-Pks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gls-Pk]' derivation='Sum' name='[sum:Gls-Pk:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Attempted-Pks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]'>
            <groupfilter function='level-members' level='[none:Club:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</column>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Player Goal'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]'>
            <groupfilter function='level-members' level='[Player]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' scope='cols' value='Goal' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]</cols>
        <show-full-range>
          <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Mins/Apps (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Player&apos;s Foul '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player&apos;s Foul Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Fouls]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fouls]' derivation='Sum' name='[sum:Fouls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]'>
            <groupfilter function='level-members' level='[Player]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='Fouls Committed' />
            <format attr='subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='PlayerCard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player&apos;s Disciplinary Profile </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column caption='Crd R' datatype='integer' name='[CrdR]' role='measure' type='quantitative' />
            <column caption='Crd Y' datatype='integer' name='[CrdY]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrdR]' derivation='Sum' name='[sum:CrdR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CrdY]' derivation='Sum' name='[sum:CrdY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='PlayersAssist'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Assists</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Ast]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ast]' derivation='Sum' name='[sum:Ast:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]'>
            <groupfilter function='level-members' level='[Player]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]'>
            <groupfilter function='level-members' level='[none:Club:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Ast:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</column>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Action (Player)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Ast:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GERtr&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;ENG&quot;' value='52.355499999999999' />
                <semantic-value key='&quot;NIR&quot;' value='54.787700000000001' />
                <semantic-value key='&quot;SCO&quot;' value='56.490699999999997' />
                <semantic-value key='&quot;WAL&quot;' value='52.130699999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;ENG&quot;' value='1.1742999999999999' />
                <semantic-value key='&quot;NIR&quot;' value='6.4923000000000002' />
                <semantic-value key='&quot;SCO&quot;' value='4.2026000000000003' />
                <semantic-value key='&quot;WAL&quot;' value='3.7837000000000001' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='CountD' name='[ctd:Player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Player:qk]' num-steps='7' palette='red_blue_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Player:qk]' />
              <lod column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Country:nk]' />
              <geometry column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Latitude (generated)]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Shot on Target Players'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shot on Target (Players)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dataplayer' name='federated.1axwwpi0u661y2146jqkx1cu6qpt' />
          </datasources>
          <datasource-dependencies datasource='federated.1axwwpi0u661y2146jqkx1cu6qpt'>
            <column datatype='integer' name='[Gls]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column caption='So T' datatype='integer' name='[SoT]' role='measure' type='quantitative' />
            <column-instance column='[SoT]' derivation='Avg' name='[avg:SoT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gls]' derivation='Sum' name='[sum:Gls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]' direction='DESC' using='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:SoT:qk]' />
          <slices>
            <column>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</rows>
        <cols>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name=' Player Embed URL '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666' fontsize='16'>English Premier League 2018/2019 Season Review</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='9'>Click a team name to look up more information</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='8' italic='true'>Datasource: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Benton Sans Book' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fbref.com&amp;quot;' italic='true' underline='true'>https://fbref.com</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f1f6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97794' id='19' param='horz' type='layout-flow' w='98698' x='651' y='1103'>
            <zone h='97794' id='11' param='horz' type='layout-flow' w='98698' x='651' y='1103'>
              <zone h='97794' id='6' param='vert' type='layout-flow' w='98698' x='651' y='1103'>
                <zone fixed-size='69' h='10620' id='8' is-fixed='true' type='title' w='98698' x='651' y='1103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='87174' id='3' param='vert' type='layout-flow' w='98698' x='651' y='11723'>
                  <zone h='87174' id='4' type='layout-basic' w='98698' x='651' y='11723'>
                    <zone h='87174' id='7' type='layout-basic' w='98698' x='651' y='11723'>
                      <zone forceUpdate='' h='87174' id='23' param='https://en.wikipedia.org/wiki/Sergio Agüero' type='web' w='49349' x='50000' y='11723'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='43587' id='24' name='Player Goal' w='49349' x='651' y='11723'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='43587' id='25' name='PlayersAssist' w='49349' x='651' y='55310'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Team Embed URL'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666' fontsize='16'>English Premier League 2018/2019 Season Review</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='9'>Click a team name to look up more information</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='8' italic='true'>Datasource: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Benton Sans Book' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fbref.com&amp;quot;' italic='true' underline='true'>https://fbref.com</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f1f6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97794' id='27' param='horz' type='layout-flow' w='98698' x='651' y='1103'>
            <zone h='97794' id='19' param='horz' type='layout-flow' w='98698' x='651' y='1103'>
              <zone h='97794' id='11' param='horz' type='layout-flow' w='98698' x='651' y='1103'>
                <zone h='97794' id='6' param='vert' type='layout-flow' w='98698' x='651' y='1103'>
                  <zone fixed-size='76' h='11586' id='8' is-fixed='true' type='title' w='98698' x='651' y='1103'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='86208' id='3' param='vert' type='layout-flow' w='98698' x='651' y='12689'>
                    <zone h='86208' id='4' type='layout-basic' w='98698' x='651' y='12689'>
                      <zone h='86208' id='7' type='layout-basic' w='98698' x='651' y='12689'>
                        <zone h='45307' id='17' name='Club Stats_ Goal' w='49351' x='651' y='12689'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone forceUpdate='' h='45307' id='23' param='https://en.wikipedia.org/wiki/Manchester United' type='web' w='49347' x='50002' y='12689'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='40901' id='24' name='Club Stats_ Assist' w='49308' x='50041' y='57996'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='40901' id='25' name='Club Card' w='49390' x='651' y='57996'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[ctd:Player:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:Age:qk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Country:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='PlayersAssist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:Mins/Apps:qk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Stats_ Assist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Stats_ Goal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Stats_ Goalscorers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Stats_ Fouls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[avg:Flsper90:qk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Comparing one players with other players (goals)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[usr:Calculation_710442907703709699:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[usr:Calculation_710442907703943172:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Penalty Attempted and Scored (Players)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[med:Age:qk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:ok]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Gls-Pk:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Player&apos;s Foul '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:Fouls:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Shot on Target Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Shot on Target '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='PlayerCard'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Club Card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[:Measure Names]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[sum:CrdY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Player Goal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Club:nk]</field>
            <field>[federated.1axwwpi0u661y2146jqkx1cu6qpt].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Team Embed URL'>
      <viewpoints>
        <viewpoint name='Club Card' />
        <viewpoint name='Club Stats_ Assist' />
        <viewpoint name='Club Stats_ Goal' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name=' Player Embed URL '>
      <viewpoints>
        <viewpoint name='Player Goal' />
        <viewpoint name='PlayersAssist' />
      </viewpoints>
      <active id='8' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Player Embed URL ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WYxkZ5aY99099j0yMrNyray9WMWluYrshezpnmH39LRHM5IsjGEBhmA/
      WLAtGDBs2LAMwX6WYPtVkDGCARmWZkae6WZ3s5scstncimSRtWZmZVXumbHvy424y++H5Fas
      hZXJyCUq7/dQQEXe//znLufec/7lHKlTaws8PA4p8n4r4OGxn3gG4HGo8QzA41DjGYDHoWbH
      BtBo1BF3CZ/r9RruN9Fo0BCCtY31/dbCY4co/9P/8D/+L1/+4Tev/AWfzC+wliszPTmOdI+G
      f/v6q4wcGWb25gqZVPLz33/9yitMnjqN+un/G+UV/s2//StuLc4jB1OkoqEHUiy3eoOqpREJ
      GHf9u9Us8Or7Vzk2ceSB5H0d9eIaP//1a1y6/AlDY0d5742f88Enl1FDaezaBn/xNz9nbOYU
      3coaf/3qb7g2O8vo5AyKXWd2Mcf85Xe4dO0qtZ5Kt7TEb373DuvFJuPpML959WdsNCQmMlF+
      +cpfc/HSJfTIEMlIkPXFa/z6t29zc2mNyemjqN/wm7x+4yP+/a/eZH7uCrHM5D2v38LcJeRA
      Ap+mfLMOBxz1qz90LYexyaOEQlHWZj/kvRsb9NomP/2jH/HGb36Bg8T06ae3DnYdGs0mVz/6
      HfObJU6efgKr2+C1V18BLcLL33se4TpMHj/Pd86l+eUHt1i6+i6KL8iJqQk+vjaLP5Lm5JDO
      u7PrWJ0mQ6k4jhbj9JCOMNK8//brbJaqnHr077B8/QKKrvPUc9/HL1y6PQuAcnaR335wGSOU
      4NuPneC1t9+j62r89Iff4ZVXfo6Q4OSjL7CxMs9LTz/Kax/fZDqmcHlhmXhmiheePE8gluGP
      /vAnXHjzF5Ty67S1NH/843P87PV3efml73JifBlXCGyzQziWRupU6FoOpdWbTM6cJX3+NPXC
      Eh/crLBZWePv/vRPeOXnf4UtP8YzTz7Gh4ttnGYBKzjKH794gp/99iOOj71EIZsllhnj6fOP
      oFgNfvbL1+i5Kj946UXee/sNyvUm3/vBj7jw+ivYWojvfvsFfvfGq3Qsl+e+83u89/rP8AWD
      BFMzfOfJR3Adi7NPPM+0Ueby0jq1lQoL63nGZ85SyS7z4ne/wxtvvUvMZ5OckHjt1b+h1rF5
      4oknWNkoE9cadLQRaG1y5vHnCeoPt5d8l7OTiERjREIhrK7J8bNPcTTlZ2nlFuHRR3j+/HEa
      pg2AcB1aHRNN13EsG0e4aEaYl77/A8xa6XOJN659yC/eushTjz9CtVbnhRdeZOHqx9hColDI
      0mm3OHnuGY5Eojz/ey/jtEtY3Q5mp80n164iyxLrGxs06jWe+jsvEfHd/ta6fPEjLCTKpRzV
      egPbccgtLrK8vkB65ls8fWaaVtei1W6BcGm1O3z4yUdIkkQ+t4ErQMbltV/9DP/oGaaSfhRV
      QZYUwEXX9c/7arWaBMNRgn6ddsckW+8yEvVz4+oHfLCQ58XnvoWLhCyBosjIsoKqbF1mNZwh
      bBX45d/+lq695Sg++ux3OZoK8td//ZfMz11ls9LB6dZZL5QxzS5Wq8pavoqua9i2RWXzJqEj
      j/Dj7z7Dldk5hBrg93/wA8rZ1c91/OidV/mLNy7x1CPH+PCTj5AliY3NLHFDcH1+DjWcxmw3
      6VY3uLyUQxI2pXqXSnGDmilj1jcp1doEHvKHH+5mAMLm1s0b3Fpevc2XD0VTrM5/yLsfX72j
      ie1CNOwnm83ftZPjZ77FT3/8E0YSYQx/CF1TmJyaRAiJ4cwwsnx3R0tWdUbSQxj+EEOpOIoe
      IGB88dFaX5rjtTffJDMxhetCZmiYWjmPUHwE/QbRxBA3r7zLhcvXAYluvcjrb79Lz3aZHhtH
      yBqZoQySBCtzH7FcNims36TqBLBKy/zNL19hfPoUC7Mfc31hgXfefQdH0sitL5MtVXE6ZbRQ
      GuG2ef2tCyhOh2s3Fjk2HOf/e+VndKUQvXqeN979gBtzn7CcK6GqOq5jc+7MIwDMXvmIuaVV
      FE0nPTKOX4NYPI2BSaXVIxIOgmMhaX6w2jj+JNmFi/zyjXeYGB+/63V74rnf4/GZDPO3Vpg4
      MoZi+BgeSnHm7Gl+8cvXOH3iKABqKEUm7CMYiRGPxYiqPUzZj9qtoEZH7un+PkxIX50Jtnpd
      LMdBkhR0TQFkhOvg2l3efv9dquUSjzz3+0wmg6iqgu24KBJ0exaG4cOxLVRNw7JtNE0D18F2
      BZq69eD2rB6apoMQ9LomkqKiyBLi035UTcO2LGRJAllGEoJur4duGDiOjabpSIAQLqZpAhKG
      z4fV7YK8pXO320ORFYTd5q33L1AtF/nWd37MaNRACJAkGVWV6ZpdFE1HUxUc26JrbblUuu5D
      wsWyHQzdwLa2rglI+Hw+rF4XJIVb1z8idfQxUiEN0zQRgKJo6JpKt2ui6T4k4WD2egBomoFw
      bQQSuv7pebguZreLquloqoxlWTiuwNB1er0usqwgyQrCsXCEhKHrOHYP2wVD17BsC03dut66
      puE6Ni4yigw9y0ZXVcxuF003UBUJ0+x+fp9kVUM4Fj3bwTAMXMdGICPhgvTFl+th5g4DuBdC
      CJqNOkJWCYeCA/F2EMKlUa8jqTqhYKDvOmdzWTJDw0iDcDE87spXDEDQqJZoOzKRQBCfT0eS
      JMyuic/w3dZQCIH0De/8V2V0Oh38fv+XDnAxezY+Q79L6+3Jr5by6OEkAf3eox7iS+O63/Tc
      PAaD20aBhOtSqDaZGEuysriBPxaiWa1iBPyEAmEiAY1bq5tMH53m0kfvMz41Q6PRJhY2aNsy
      wqzT7jnEEmlCOqxlS2RScSqtLgHZptoyCYajyFYHfyxNYX2RcDxNq1FjaHSSailHyG9QN10M
      yQJty7VJpDI4lglAt92gbctMDSe4fmsFRZZIxuMUKzXSiSim5dJrNxg6Mkm9UgSni+mo5LMr
      jI52yaNiSD1sodBqt1BUnUTYT8sS5DaWSWfGiAR0SvUOYZ9My5KYmRjbl5vjsfvcPgwqSTiW
      Sa3ZBtemWSvhqiGatRKOpKHYDRZvXiU+OkMimaSYXSVXNWlGDYoNm9PTE0QMgbC7NGwYTsTY
      yG1wa6PME2dOEglrSKLD1bl5pk76iEVjCKeLJSlUKjUkoFqv07MEbWGjKiaNWo1wPE21lKfa
      6hIP+jBtwPYTjiRRZMH65hohQydbaTGe9vP2pUX88cxW7KDp+GSJiYlp2s0aPVtCCgXRFIVI
      OIymSGxsrlNo2kxmEti2RbXWwe31aGtxApr3JXiYuWsQ7AhQFWXL/TFNDJ8PhECWodPp4g8E
      sXsmSDI9y0JTFVxkdPV290KSJBzbwnIEhq59qQ8TWTXQFDB7DsK1MXwBEC7CdbAcgSK5IGtb
      AbIQIBy6tqDTqhMKx/DpKs7nw1QuHbOH32cgyzLtdgvDF0Di9vBGuDaWK92mpySBZVmfBn8O
      yCqqtDUf8pnOinK4J4seZh44CPbweBi5Yya4XimwvLZBZnQMxxGU82sMj05guxJYbULRKLWG
      STIWBlzarTYCgaRotDtd4pEQsiwxX7cJSjYOYOgGqiwRlAWupBIyVMrNNvGAj9Vqg0LHIh4M
      MBpQsQVYArK1JqeHExQaHWJ+jbYtEI6N5ULYbxDR71Ddw2Pb3DEKtLm5iYxLtVGn3ROkEwns
      To1qu4tjQywRQ8FFkWS6ZhstEEGWZFq1PI4a5MzxGZbKdSwBsiQhA44QSAgc22E4GafbaaPr
      OuVODx1B03YwgBYSwrLw6yqqqqMKG79hUGib2F0Tn8+HEAKf4Wc8fPc1Lh4e2+H216gAx+ri
      i2cIuw6jo2kazTqqEWAinqLVdTAkC38kRSmbIz0yTijoY219k1QqDaoP07Lx6xp+oG3Z4DpU
      OjYjET81R9DqdJAkhZ5lk/TrdCwb1bZB1UhrKg1c/LqOLAkcR6batZBch2gohC5vefWpkPfw
      e/QHLwbwONQ8/HPdHh73wTMAj0ONZwAehxpvLNHjwLCZXUFTta8/sI94BuBxYNBUjVRqZE/7
      9Fwgj0PNbQaQX7zEq2+9x5tvvUWrUeKti9e3LdC1u3xw4V0ufPA+q7nSPY+78O67dLevr4dH
      X7nNBTJbNaZOPk20cZ3lbB0Q5NaXWNnMEU2P06kXOP/II1y7PodfE+TLdSaOnaW8PocpfDxx
      /hGW5z4mNfUIQdHAFwywcnOWjXKN5NA4EbXHymaOWHr8trX3Hh77xe0ukBBcu/wRN4s2R0ej
      AJhmBySFufk5NKvJ/MIsHSnIxY8/RlHg8uWrrG1mefzcI8jS1pY7n2EAPd5570OWNos88+TT
      ZNcWt7YwSgqzN2b34VQ9PO7kNgOQJJkz557guaefxKfISEgsr62iKAqKInPykfO8/vrbnDs5
      ycTYGEgap0/OEIklUD7d2D598iyXLrzJ8uoGwXCEoCZ4/4P3Uf1hVtaWURQVRZG9HVceB4Jt
      LYXIrd9iYbPO808+tps6eRxSisXNPR8F2tYwaGJojOdG9nac1sNjN9mWAWjazjane3gcVG4z
      AM2vI90jSZWHR7/otQ7OAPhtBiDJEvIAJEOqNzus5Bt9l+u4Doq8O/t/d0v2fsodz0SIBn33
      PeauSMABGQXv+1KIZrmAbYSplfJMjI8jSRLNZpNQ6P5Zoc1mEzUYZHP5JnooRSYVw+61MB2d
      kF+7TcatzSr/7F+/0W/VPbbJf/cPn+fciMr7n8xy8vg0C0ubvPDCs2gD5EX03QC67Q6lRofN
      lRUMWVBpWQirjeKPIJlV1FCcVqWKK8vEYxFWVzY5OjPO+tIGZ595gnq9yVAkyScX3iUylEbC
      z8X1NUZSEUxb4syZk/1W2eMb4A/HyYQ11EiaoJHFdsThNgBZ0RDtEpFEho7ZoWtaJNNDaJLL
      Sq6OajmMDI0hFJVqbome49BstVFUFUmS8PsNSrkNqq02bq2FJvVoNxowdoSMphyu4hsDwK0r
      F7i+2SBVeYMGAR4bnGcf+Mo8gB40BiIGuLlW4s9/dbnvcgUCaZeynu6W7P2U+/dfOsvZqfS2
      ZZuNzl1jgP2YBxhIA3AcZ1eSVdm2jaruzgrx3ZI9aHLhYBnAV85QUMhnCcdS+L4m7065mEcx
      gkTDwfseZ1tb6dIBOu02Pn8ASQLXthCKhrKDl9e1pQL/6795a/sNPfrKP/37z/LU8RTLa3nG
      RpJsFGpMjo0OVLbs25PjOg61ep1KsUB4aIxOvUoylaTbadK1wKdJuKqfTDLGxsY6I2NTLN7c
      xEUimR6iXCySTCUwOyayLFGvNdAMnVgsRjgU5NrlSxw/ew5VkWkW1tloS8yMJilUWsQCMpV6
      G90fwidbuIqPSDiE1WmRqzSYmZ7cqhkAOK7A7Nn7csE8vsBxBI1alezCJRru45RuXSE1NEzI
      OPhexGfc8ZqvlotMT4yxtLpIs2XRaJucOjrEalGwsXCVYCJDr93ZOtjtoWp+XEVm6frHNG2d
      VrfHsclxlq5fIjh1lsbaLK5soDlNOrbD/LUFkkNhzGabZCLM7MIGrWoed2YGXdWQhM383BzJ
      kUlyq0uEEilWby0yPHqEoK4gy4NzcQ8DvXYT/5GTRJ0K2vRpgvoAvf65YyJM4fxjT6KrEoFY
      hmI+RyI9hGGoTIxIZCJnMV2NdCKKKvVwJZ3McByQGEnFyOYKJNND+Aydo488TrFQ4OjJ8+C6
      KLLM88+P0G23KJYrDE1PU6o0OHcqRaWeIh6P8dnoWcinYaNSVRQmRofQNAPFteiYNsGA/y6n
      4bFfqIaPzvoqkXSaaqmANTWGrg6OEQxkEGzbNkj919MLgrcnV5alz93S7XCAg+DBYK1Q59+9
      0f9NNa4QO7qh+yl7P+X+5PmTnBxP3veYg86eGYBwbS59/DEjk8cIBwwMw6BbXiXvJhmJ+3Bd
      F5+u8OHFSxyfHGWl2GRmYhRd1+lZFoausbGZ5ciRI1SbXX57aWWvVPe4B8+dHSelNnnn7Xc5
      cvpxlm7M8sOX/3Cgagvv3RdAUojFInQaFT65cJX06DRBuU1VleiW29iWyeTJcwQUwWq5jS46
      vP3m35JODSMMGdeFQr5Carg/leE9+kMwGCIzdZrJoTCScwKfNjgPP+ypC+TQ6zmEohHGJ6eJ
      xOLUSg4jyQgBoZOrtPBpEkemt+qOGaqBEArhUIRYKkqj0cLvC+LVajlYZDc2qFYL3LQ7VDsW
      juOiqINjBAMZBFfqbWZXy32X67oO8i4th94t2fsp98R4gmQksG3ZXhD8DXGFoLsLE2Gu6yLL
      u7NQfbdk75XcoE/jqdMPn/u5qwawtnQTRwsyeWT4jr+1Wi2Cwa1lFELYLC1vMj01DoBldmj1
      bGKR8F3lrubr/Iv/993dU9zjDsaHIjx1epgP3v4dcmSYTmWDJ5/9DsaA+fxfZVcNwLJ6KKqP
      N3/zS9JTR+nWXaIhQdtWiYU1lm4tEE6OkPAJWq0WhUKO1ZurxMZGiGgSl5fmKbVgJKKhGAE6
      ZpeTp8/upsoe90VmanqKXN0mmklj2wJjwHMk7Kr5qqpGu90kEk8TiwQYGx/Htm1M00S4LkII
      hCuo1hsIp0uxWKHX7WFbJkurGyianyPDaeLpEYKGutVmNxX2uD+uxRtvvIXlWFz95GPmFgd/
      KHrPg+Dc+gr4omSS0Tv+1m3VWcmWmTk6ed9JmJVshf/wu/m+6yaE2LWEXbsle6/kJiIB/uwH
      5/oi+yAFwQM5CtSzLCy7/98C23FQd6ko9m7J3olcVZExvma5+yHdD7B7OL0urmpwe8wkEILP
      3zSdTgefT8Xsgt+nfbkxXaFifDq+fG2p6G2K/wb83pNH+Sd//BTLyytMToxy4f2LPPrkk59f
      38PEnhlAr16ihA+z0SSkQ6Xewh+KocsCu9cmnBylU82jqAoYQdbW6yQiPiwHKpuLkDjGRMJA
      D959ZMhje7hOj+WVNUK0yRbWCa5N72h746CzJybvujbZQoVGOc/87CwdVyEcDqPJgm6nytWr
      c5SrdYaGEtxaK+M0StyYvU6h0cXAxgiF0WSHuaUN1AHKOHCQkSSJVq3MRqGMIkl0OgcnWdVe
      sidfAAmJ1Pgkfl1jbHQcv89AQvrUDRxiKDOGagRQNIUnHj2FIsO3kyP4/D5URUbxh0A4hP3D
      SGz5sNGgVyx7pwQMDSSJ848+SigWJ32kSTqT2W+19oWBDIK9TfGDKxcOaRAMfBrMagi7i893
      75R63W4X13Xx++++++vWRoV/9fOP+67ewzoM+t//2Qv4pS71rkRx7QZN4eepR8/0XZdBZG8N
      oFPh+noXxW0TNVTCiQTlSpugLrAlg1jYjz8UZvbKRTITJ9hYWyWRSLJZKHJkdJhiscr09CQt
      0+L6cnFPVR9kLNvBMhusF5ucPXWGCx9e2m+VDgx77u8EQ2F0yWFtfY2lxQUUI4ppOcSDEjeW
      N1AkMHSDTrPG2uoKt24sMZSOMnfjBqvr63Sdvdb44UBXFfKFIuWNZUZnTu+3OgeGvf0CBJJM
      +xXEUJDhzAhGIICqGiD8dJtVRoa3Fs0dO30O17GJRWMEAn5UTeWx8wka9SaGAoosbQVyfUfA
      LmWG2z3ZXy9XkiQcF6YmxohkMqR9XmKBz/CC4C/hBcG7LxcOcxDcJxY3q/z5L/vvxz6sQfB/
      +w+eIxraQR7/Q0BfDaC8ucRSts6RiXFUSaLXbmCEIoR8Gl1HQnZ7KLqPdquFJEmEIlEW564g
      +WOowmJ49Aim2SUU9FEvleg4gkg8hW22iYQD1BodEokYzU6PT27m+qn6Q03Pdli7dZ31msDv
      VLl4Y5N/9A//ZL/VOhD01QCEELQ6HXrNKhcv32D6zAxyNsfNRhFXDtKr50ilM9iSD1mRSNgu
      meFhVjbLaLJgbfEGa9k6w6NJEqEwZqNIuWkToEu+BHbHIpqI9VPlQ8PY5AyV2VvMjEwixyb2
      W50DQ18NIBhL8+RjGRqNOlNHpxgaymAA0VaQdk9GSQQxAmH8wQiSBLIMzWqRUCRCUHWQFB1b
      DjA6miGgKRh+HUv2E9ZlNlYXmF8vcfq8tyFmJywuzLG8XmI4FeXk9J079A4rAxkE11smq4V6
      3+W6jrtr579bsh9E7omxJJq6vUEDLwg+wHS6FjfXK32Xu7URfJcMYJdkf1XuxFCUx457b/gH
      ZU8MoJLbYLPS5PiJE3RqFYLx+G35fdrNGrIeoFFtkB5K3FNOvbLVdrPU5F/97OLuKz6AfP+J
      ac5Px3n9zff43nOP8uob7/HMt79L3Fs8eFf2xADMTgcX2FxdJJ+vokjXqNt+hoIKSiDGUERm
      6eYyqhbgysW3OHL8ccqFLFG/RLGrkzAcfMEwpVKdJ56O74XKA42sGgyl46wuLtDp9ajVW54B
      3IM9MQDd0JHMrZoCPr8fvy9A3Bcm5PMh4aIZCidPZagUsriZSZxWDcMfRNEhYehkUnHsTpOW
      z79r87QPE47dZvbKFc6eO4dfl+l5xUTuyUAGweuFGr/+cLHvcl1XIO/Shpvdkv1VuceOJHj+
      3Dcf5vSC4ANMIuznh0/N9F3ubi2x6Jdsv6ER+8qM7m4+qIeBXb1y9UqBugljI2mEa9NuNBFG
      iJDv9m6FY9HquXTbTfx+H7puYJrmPavLz62WDuWm+Bcfn+K//tOnmJ1d4NSpk6wtLxBNjxHx
      DGDH7OqVK5TrTE5OsLQwiz+awCxsUvMNMZ0OUCvXqDTqaJqP48enKawvUai1GBlKoioKHbPF
      2qpNOp1iM1ciHgtSa5icOnV8N1U+8AghqFYrOL0G77z/Hs9+e4hI0Fvns1N21QBcyySby7G0
      uEQwZTFkQLfdYH5uDdmIkUkm0BRwhEK7UeFIKk25KxGStzZol3IbtHs2Psmi3A6QiQS9SvHC
      ZnnhBrg2nVaTzWKFiZHIfms1sOxqEOy6Dq4LCBf5S/7vZ/7wF6sYJYTrIMkyQojbj1MVHNtB
      UdSt+rOSxNxynv/zLz/om56fc8C3Azxz+gj/yQ/PYXZMFE1HVWQcx0XTvOXQO2UgR4G8/QCD
      KxcOlgHs+Axd54s39tdN8X91uv6zt/xO18fPr5b4P/7iwo7aDhL//D97kUTYwBFbAwUuMj5D
      32+1Hip2bADLN66ip6bpNQoEDA1/OIGmKXTbTdqWREC1MV0dze2Qr7XJJMJIioblKsQMhbrj
      YLgWTVvGRw9X0anVmyQiPqpth4DigKSwXqwgdVtMHT9Fo9Fi7MgwXcthvdjo53U4kNiuS259
      iaV8k6GQzIWrS/zHf/KT/VbroWKH/o5LrlQlu76Ca5nM31ykVCpw6dI16rUqCzdvUG20scwa
      1YZJUBPkqx2WFubYzGU/l1KpVli4sUChWke22mRX5mk4Bn5dMDu3SK1hkkknSQ5lKK8vks1u
      YB6ySc2RsSlCPhVdUwl8WlDEo3/s7Avg2px7/FmE20OSwDB8aIEwZ8+kMNtNJidDDCW20p9X
      ijm0QIx0MEQvHqDWFag+nfLNW4QjEaYmI/gUC0s2GD4yjdRt0HIlZo6O4Y+kaNSrhAwVhsdx
      y1UGqAJnX1i+OctGvoyWDjI5Obnf6jx0DGQQ3On2qLd6fZd70GaCk9EA6tfcDy8I/mbs+hTi
      Z1VdJEm6Z9ArXBck6YECaoByrcOvPrjVZ00PXqX4P/3eGcIBbxXnbrK7BiBsrl25RjiZwe61
      iYcDaP4w9VqFaDxOpVhiaHSMhSsfkZk8zuVPrvDsM98CwDLbuIoOjkWt1iQ1lEZXJVB0CrU2
      f/XW3K6qfhB4+dnj1PMrFFrgc2osFk1efumF/VbroWJ3XSDXpFjuUKvXiEZD5NZWMIJhguEY
      quQgJBlNjyKLJmanS9dRCPo0kFzarRa6rhKMxFmev0ZoaIKArpJMxqk12syulPqn52fqHrAv
      wKMzGQxNod5oEgmHyObzDH8li/Ne7TTrJ9Y93FdvIuwB2S1f/aDFAA+jXDhYMcDBf9rvwm7d
      mN2Su5uyB03uQWMgDQBg6eYc+XIfM0MIh/nr1yjVWv2TCTRrZTbzJcqFTRaWVvtW5rVRLZEr
      lMlvrHJreb1PUgHXYn72OvlCidlrV2l9w4kXy2xx/dp1KqU8n1yZo+ccrEK3A2oAPWQtQqfR
      v8wQwu7RaJv0OwQIRuIIu0uzY2EoLq7bnwcgFE3gWCaNRr2/C/gklXQ6RaNWJDMyRqn8zWIt
      1fCTjIVpVqu4B/BpO4AqPQgajcomrty/dTFCUogEDer1Zt9kAtTLBVZW17B6JpV6h37tiqwW
      c6yubeALhKjV+vgldNpcm7uF4Q+wvHQLf+CbzT63KnmWNgtowQhar0nzgOW3H8gg2GOw8YJg
      D48DgmcAHocabzf1AaHVqNLsCjKpLxJ/2T0TR9YxVJlsNosQAp/PRzzuJQfrF54BHARck7fe
      usDEzDROu4zqD7O+ukZYt3GSZzg5EuLy5cvIsszY2JhnAH3EM4CDgBC4AuZmrxALRxG+IBs3
      LhFNDHM8uVXOVJIkRkZGOHny5D4r+3DhGcBBQPHz3NPnKLddEgEZSdUZT8dJJlP4glsF7Xw+
      H2fOeLV9+403DOqx53jDoB4eB4TbXKBeu+dlX/bYfQ7QcqCvJOkUB0k3D49dx3OBPA41ngF4
      HGo8A/A41NxhAI5j4/RpzbqHx0HnDgN4/+3f8LsLl+7ZoFrK3ZadrdcpM3dzdVeU8/DYbW4b
      BXKdLo4aA7OC3Wvxi9+8wcjYFKMBwZXNGkcnp+msLTPxTIhf/YfXmTh2jLje5qNLq0SD8O6F
      K0zNHOWxM950vcdgcNsXIL94lWLTpFLKstkQHB0boZLPER6ZIKLL5PP5rczOkp+ZqWHKxTyx
      oVFOnDhNJjPKzHiaciHHAdv04+FxT277AlQsH3/0gycQZpXrS1ks20b3+el1WsiKgm4YREN+
      NLtL297KCerzx+jW59nMhuk6AsPw9W3bn4fHbnPbWiAPj/3EWwvk4bHH3OYCScFAFu4AABDR
      SURBVJK0ezWyPDw+RRygYfbbDEAL6N5yaI9d517LofcD72n3ONR4BuBxqPEMwONQ4xmAx6Fm
      IA3gy9XkD2Kbvehrr/rZyzb7wUBmhai3TBaztW21cR132yNcO2kjhAAB0janw7fbl3DdT4et
      d7ef+7VJRQKMDUXu2sZxnF0rstdP9kTDRjnPWr7KsRMnsFoNjHCYL5df6HZaSJpBu9khFgvf
      U06r0cAfDrO4WeWf/es3dl9xj/vyB0/P8J//4Xk+uHiVZ84f5ee/eZ9nv/M9EqHBqWa/JwbQ
      rDdwgEJ2lY31ItGoRrOnEVZtZH+MRMBlaaOCqgW5NfcxqbHjFHJZEhEfDVvDJzoYgTC5XIkn
      nn5iL1T2eEBkRUNXZVqFDSqWxKBNI+2JurIsIwFmx0RVVVrNNrIiE4qlCBgKsubj+MmThHzQ
      7jgUNzdxhES93qDZbBKOpVCENRCf1MOGY7W58vFFblVdUnKdtXwfaxXsAQOZGOvmeon/+9dX
      ttVGCHHPOsX9bPP5DOd2m223L7H9PnbUz33afOvEKD9+7vhd29yv0PZBSow1kAawkwqGO6l8
      vpM2rusCbLvE6Hb7chxn68u6zYd5r67DoBjAnvkU3U6TSqNLJp24601z7B65XJHU8Ai6cv+b
      enUxzz//89/ulqoeX+F//k+/zdnJBNVml2QsTLFUJpVK7rdafWHPDKBYKiP32iwLleGISr1e
      x0JD7jURRpiY0aNcN/EHqlR6PRr1Bul0gkqzS1gTOJoPq9UmNTyCK8Cy3b1S/dDjCkG9VuXG
      4jpiJMLPfneFf/QP/qP9Vqsv7Jm/41o9FrNVYlqX6zdWqVWKLCzcwhIKomcCEobPR6VcwadJ
      bK6usrqZp1QqMz8/R6GQxexJGNrhqF970AiFowi7x6Wr16nns3QHZKLr69izL0DmyARjE5NU
      q1VS6SQxv0IioxIO+rYUUSSmQyquY6EqEjOnTxMJ+WmZDoHJYXqohL9hxUKPnVOvFlE0nede
      /BFPP9/B6Hc92X1iYIPg7QaZOwmcd9LGFQKE2HX9HNdFlqRtB8E7vQ5eEHyAWMnV+H9ev7at
      Nns2DLpDtt/XzsZB/+nfewZVfTje3v2gbwYg7A6Xry2QSETQfHGS8SCu42CaHRRFpdVsEo5F
      sUwLRZUxDINut0cgGGDuyicE4sOMpGO0OiZmxySVSmJbPVTdoNftousavZ6NP+Cn1uryztW1
      fql+qPhv/vRpFq+8S803iVRZZLPh8gcvvbDfau0bfTMAq1klNXGciCizuLHC5rpKOpOiU9lg
      NVsinhxiwlDJr2yyvLbCyNgkku1w9InzOI4DuMxdn0UPBMBq0zAtKmsLaMEo+XyZsckxhOVw
      6pxXJuibMj19lMtZl3AsRnTk4RjO3Cl9MwA9lsGcn0eOJTh69CiNmkkmE6es2LiyQSqRoNNz
      SaQToCpEEyliAQMZCIdDgMTk9AyOayHJKlavgz56BMMfRPcFyGSG8SvyYK7fPmDMLdxiteQQ
      oYWRhKmxzH6rtG8MZBBcbbSZX6tsq43rutsOTHfS5rN18NuNHbbblxAukrT9e/X4sSE0TdtW
      G28m+IBhO4JGu7utNg+bAbiuQJKlbYfBD8foff94AAMQrN+apWBqnDt9jK+uUuh0Ovj9ftqN
      CjVToMsuyWTqvhKrtSqxaOy23+xem418jYmxO98A1UqJUDRBp14nEIuyVqjzv//7979edY87
      eP6RMRavf4SITtFYn6Uth3nuW+f2W6194wEMQOJIJkm3FWDh+iWEENxYK3P26AhtS9CsVXjk
      8aeoVOpYjsDEZfXmNTpqnExIJxQJc+HDTzh15iSNZod40KDY6CCaFxHhUQy7STSdRhUurZ5g
      c+UWPRvK9RqhYASz00Q2QkQaTTaz3n6AfjA9McblbI+JqSlW8s39VmdfeTAXSNYwVIVwegTb
      bDIzHSYUCxMG/KqEhKBVr9KxJeKpBMFwnEQkid1u0mq2GBlOghZmfCRMrVLGMAw0NUkwkcBQ
      E6RSKW7duE6v2aE7PM6RpEE4GadSKAMCVdcRroVuGLt6MQ4Lc3OzXN2wWe4VGTr6yH6rs68M
      ZBC8kqvyN+/c2FYb8anPvOttdhgDbLcvIQQS209l+Y9/9Bi67gXBnzGQQXAmHuTPfrA9v3Wv
      lkJ8lvdyu4az3b5c59Og+S7d+HUN/R6LBm3bvuvvh5VvbADCtak12sSiX2QHME0Tn8931+Pt
      bptby+tMHZ1BV2V63S6qpiN/6YH5urfo9eWityn+PvwXf/Qt/uCpKZZXNxkfSbNeqDJ5l8EF
      jz4YQKOcZ7nQQfTa5CpNEhE/K5tlxtIRUA0arQ7JZAKz3SYYDCA7Ful0jJXVNexOE91n0DZt
      jgynKFZbRP0SuVwBNRRHcy2SqSSbuRKJeIhqvcOJEzP9OO+Hnl67Ra5YJh0PU8jnPAO4B9/Y
      4V/P5umUc5TbNomIn2K1id9v0HMlOpUcSytrlPNZSsUChVoLhMPVq/MYUhdH8VEuV1ARzM1f
      Z3llnZYlmBofIxgwKOY3WVxZR6dLrm4RD/rwtsE8IJJEdm2JeqvD2soy7a7n+tyNbxwE27aD
      IoPlgCKDY1tYLvh0bWt0qG3i9xuAhEBCkbcCN9d2MLtbrlLH7BHw6bTNHgG/D1mS6Jgmruvg
      9wdod0wC/i2XSlYUVrIV/vK3c9vS82FbDXq/4196YprTYxEKpQqBwNb1S6XT6Kri7Qn+CgM5
      CmRZNvY2iyzsWRD8acrC3d4PIITAb2jepvhvyJ6PAnW7XYyvGc/Pb66hh5PEQv7bfm+1WgSC
      Qa4uFQ59EDyVifAv/6uXya0vE81MsDJ3iZFjZwkbAzmwt2/s+eu+VCrR6zS4sbBIqZhnY2OT
      2dk58sUyrUYdy3XZ2NjEtbrcvDFPpVjk6vVZqrUqtxZXOEDVdQ4ALs3sLdYrZcp1uPTRxf1W
      aODY89dFq1GjWcqyWmrgMEUyqKArgnqzwep6mycePUk6nWZtZYlSIU+11GDyxBjzCwu0WiY9
      rwbxbVhWj3q5RqNaJJi6/xosjzvZcwMYymRQdT/psS6hcAhVkdFqdTTZJRiMICERjkRJDR/B
      nJzG5/ehqiqPn0/QbLYwlK0N9OHANhOw7mQH4U7bsPt9Bf1b5x8ePUXMH0aNnSWSHNpmpx4D
      GQR7meG8zHD9YiAjplubFf6vVz7ZVhshtp1Kf8dtoH99/Zd//DSjqXunjPf4ZuyqASzMXkUN
      JYj6VXwBP8XlRbqxSaZSfqyeRbvTQZJk4lE/K+tF8oUCI5k0wWCIWr1KJBQiFIlQrzUJh/w0
      210SiRitjsWVxcJuqn5gMHs27775a3K1Hj98+WX8XkaHvrKrBiAbASZGElz84AJKMElcdikW
      sgTdANlcHcMAw9AJRY9hNgqEfH46DliVCkJY3LxxAz0QIhZQWcrKRHWFaCL29R0/ZExMTDL7
      2m/p2sIzgD6zqwYQC/lYy5ZJpjIEogn8siCISjGf48jEKAGfhiIJFAmSqRHCsRC1lsCnCAQO
      EhKxRJJcoczxyWE0STqUm+JlWeLst54j6juMZ7+7DGQQ3GiZrJe2t5PJdRzk7WZ520GbndcI
      u3tfU8MxfPqd7ykvCO4PAxkEt7sW15e3FwO4rrhtyfVutRFi659tG8A9+hpOhO5qAB79YU+v
      rN2scGVxndGxSYbiX4xs5PJ5MkNJrl+5hi+SZHpi9PO/NcoVfIk4X97DtFlqbnsUaFB5dGaY
      /NI11kpdvvOd5/BCgP6ypwbg9ky6rqBRyvL+m68xdfYx0kGVSqtLZiiO2ekiqRU+ulgkFPLR
      abQAGWltiVA4wtVrS7z84+/vpcoHAtu2ya7eoN55hkTg4Luog8SeXk1J83Hq1BmGkxEmpiZQ
      hMNarkjA7wckJo4e49TxGTRFQlNVbNtC0XQkSUOSZCZGhg7lfoB4PE5yZIqo33v4+82BDYId
      u8vyygYTU1OoX/GNNwo1Xru4vC15g5oY60fPHicR8d/xuxcE94cDG10pqsHRo9N3/Vss7OO7
      j01tS97ejQJtfaO2m7bwXn2F/INTdHoQ6asBdBoVljfLzMxMoykynXYbXyBw3zVetVKequky
      Npy+bX2P3evSc1wMw7e1i+xLzK+WD81+gH/xT36fMDVWS10eP3dyJ5VRPe5DXw3A7LSJhgKs
      b6xTrTSIBhQ6tkwiatAwQXPa6P4QxXIVWZYYmzhKsZhHCyb46ML7jE9Nky9WGEqE6LR7INnI
      vhiNSpmhdJRcocGZR072U+WBYH52lpurWY4eP07MmwzrK329mq5jsby+id1usHh9HssfIhUJ
      srS0SC5fZOHGPJVykXgyQyI1RNdsEg5HKBZKxGIRyvkN1lY3adqQScZwLJNax2FsKEG5VqPd
      bBzK5K4zx48TiSXxad7D32/6+gVIDE/yzPAkQgimj538PKhLDw/jAhKPArfXtRJCkB4e+/z/
      J89+sZ92Jpb4QrgsEJIPBfDrKlPD210TtFcbAvrbl64pDA1P8ZPRKbYZjng8AAd2FOh+ePsB
      vFGgfrHjL0CjWkEPRbC7HYLB0H2P/SyF+me4to0lBMbXFGr4LMMC3P5Aza+W+Jf/brvp0Q/2
      lrD/7R9/j2hApWsLggG/F+zuETs2gHIpi9S2cbo1JNfFF4wgJBVNsqm2LQzRxZL9yHaTtiXQ
      ZIlgKETPkRmNh2k4Dm2rQ7nloLsd9ECYUqlCOh2nUGkQVFwECrl6AzpNpo+doFJtcOz4DD3L
      IVd+uNJ6O67g7Tf/lnLb5ac/efmB2332gtgOB7nNXrNjF6jT6QAghEN2fZ1wahRddtFkQbbc
      4shwiq23oQzCwREyjUqOtqMyOZrBFgKrXSdfNRlOxzE0hVuLy0wcPYZrddhYXSMUHyIWDSJc
      l167wWaxyvTMMSTX3vUKLDtts3cVYlykHdQJ3qvrcL82Vqt319+9xFgPyEG4iffCM4Cvb/NQ
      xAD7yXZvxl622Wkqxe32tRPddtpur9rsB4Oh5R0Irl26yNJa9oGOdh2bhblrLK/nt9XH0sIV
      soXtxBqChdkrZAvbq2C5fHOOS9ceNNepYG3uCpWuxdVPPn7gcyrnN1nPFthYXeTa3M0HatNu
      VLm5uIJrmbz34ccP1KZVr3BreY3s2hI3l1YP/LzNgBqARSg2guTc3Zf8KrIsEwyGScQjX3/w
      p5iNMsvrOSrV+jb0cqnXW9RqtW20AcdxcSz7AR8WiXQqgWO1CQ9NgdN5oFbxZBoZl0AwSCr1
      YMWxA+EYfkNl7tpVWq0WPefr1+IGI3F8mkytVqfZqOM4B9sEBtIFAg2nWyGQGP36QwHH7lEq
      l1H8EcKBuxfu+CpGKM4zTz+F2dtOOSGFzHAaR7lz9eb9CAQCWPIDLvQWgs1iGSsgoXQqhNPj
      D9SskNukUGkTUGzkQIyh5NdPJDarJfL5PMdPnSfZqKI9wC63erlAvlBkdCRDudrkoHtCAxkE
      eww2BykI9p52j0ONZwAeh5oBjQEeThaufEhs6jypkEaj0SAUDiMB7733HuVyGZ/Px4svvrjf
      aj5UeAZwUBAOqxsbZFsKSrfK2voaz37/x4wPxQEIBoM8/fTT+6zkw4dnAAcEs16g2pZQ3SyN
      XJGxySO3xYnnzp27Z+lZj53jjQINAIVCgWQyOTCzq1/HQRoF8r4AA0A6nd5vFR5abjMA4Qrc
      Q5l5x2NPOUCTw7e5QB4e+0m9UaHXNfe0T88APA41D0dU5eGxQ/5/W6YaivwdwcUAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Club Card' width='192'>
      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
      /G/etO631sew6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Club Shot on Target ' width='192'>
      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
      5/M5ZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Club Stats_ Assist' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Club Stats_ Fouls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Club Stats_ Goal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Club Stats_ Goalscorers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparing one players with other players (goals)' width='192'>
      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
      IigeJFfn0y++xjANVNeiNZihLWc4roBlGcw1h6AKpgPBcBR90EMDvME4h9sl9g73MPQlkqJg
      mRq50iG+Z214X8MH9DbzvBnOtrFdkCUB07SQFQVuUmd9W3nbdR0sy2Ex7jJ1vBQzcRzbxrId
      FEXGMs2bLBGCwO9Ob9sWgijR63ZIJNNMRz28wTg+j7y2CuXfXpPjrLQgel1cx8G0bu6VbZmI
      koxjWUjP7p0guDf3UpaxLQtRkrBtGxBQFOnZ3xQcx0IQJHBtHJ6lnnFdLMdBURRcx7mJbRYE
      cN1v2/yDNhTltRISv/VmuI0K9Haz7pDIwIrn/i5ehZuQyA2vxbpGgKEBXWs1GTTilcmGbudJ
      urUKtJhPUb3Bl1Z4XEynqMEgWCairK5k2ppMJoTDd7cj7Ogzqp05u8XM2towl1OenlbYPrhH
      JPCyH89mMlky7jef1QcIcXJWobh3j1joD19Ak9EAfzj+g68PUF/CaW+00rH3kv5bd4BX4YUd
      YDIZ4jVMatdNtks5KtUGO6U8l9dt9ko5qld19o/uMx0MCAeCLNptCPi4rjXYKu3Sb1yihFIo
      5hhdChH3i0w1G1ebUB/p/OzHH97R5blULmvMHQFYXwdo16/xxxLIWBx/c0I8u0W7fs3W3i6T
      VhtfNEan1WJ3b5fqxVNsOcFeMUejXuficsT2TgnXNbk4uUAOpfFYE8amgurO0Q2DRm/KBw8P
      aV1XaA9mSJJIqVCgenlJcX+XYaONPxaj025zcHQf3w89iPgOee7d4roupm5QPn3KfD6m0xuj
      G0sm4xnL5ZLTx98wmo4ZTP99Y0ObzlnMJ+SLBVr1awLJLbTpgOFwwNnZGb3+gFQ0jKUGyMbv
      LjjenPe4bPSoXa1XBUoXdwmgcXbyGE9iG3PSJlPao3l9zkxXGdbLzBYLahdnxEqHBLwy/W6b
      /PYuIuDaFtfXF5iEmAxaDIcjri7O0B3QNY3lZIoBLHSHdMBHIpuiUj4jt7NHvXbOXPcwuD5n
      Np8znK622Nxww/N26FGHua1y7949zqp1YtEQ8/mcYDiAbzKjtFXk6qpJyK8iiT6efvUluUyB
      cFhFUb1I2SSf/Ns/E9k6IBsKsxsNkklG8QX8UL/C8a7PlvzHKIEUv/pliv6gv1YznKnN6Azn
      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
    </thumbnail>
    <thumbnail height='192' name='Penalty Attempted and Scored (Players)' width='192'>
      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
      Ciyko8NrDwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Player Goal' width='192'>
      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
      80Lz/wPVaAQ7J6VGOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Player&apos;s Foul ' width='192'>
      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
      D/IrkIBWaC+QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PlayerCard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29SYws6Xbf94shI+d5qKysebxDz6+73/MbaFG0KUKwYcALW94akjbSSlsR
      2mhjA9oIEgQCAhcCDMEQJVnwhgYJQyQhUk/vdbOHO081zznPGRnTp0XV7fe62d03I+pW1s2s
      +AG30X07/nniRNXJiO/E+c6RhBACH58binzdJ+Djc534AeBzo/EDwOdG4weAz43GDwCfG40f
      AD43Gj8AfG40UxkAQgi8vt64Dp0X7U3x8artqZ4suEJg2w6yrCBJV28NwHEcJExP9mzLQlXd
      XxbvOhtFUcDluTq2gyRJSLJ7JyfFR6/2hHMeAIry6u936arfBBvDAVvbu2zcuo3q8odlmwa6
      aRONhN3pbBtp73eR7YYrnc/N48rvALtbzwloUWpn++hOnJjmEE8n6PeHRMNB+r0ekVgCvd9F
      0cLIjoEtBYiGAzx+eB8tkWdpNsvAFMRCATr9AYlEgl6nTSgSu/hSEeBYDAyHeDx61S75TBFX
      HgC2ZdAzBAoKXUthKHoc7j3hxW6N9bsbRANgV5t0G02CIZXj/R2ccJ7f/q0PCEbybKwusP3o
      Mz57eMj7797CkCz290FWVQQmQSkG0oDW2SEnbZv//m/+TUJjetTymXyuPAA0LYiuOyQyeeq7
      DeLpEFogy8pagng8ydJshpOTGunlFWyjjW3MosXzSASRrAafPxgQk1UW5/JYtkWrP2C+OMvZ
      6SnxTI7u2RFGIEouVyCU1caxqPGZIq58DfA66bdaBJJJAq84zrZtpNN/iex0XNsQQiB5WD1f
      RockuV0fXujAvXKyfPRkDwGCkbQTFQCjYts2kiQhy+6zvKZpEgi8KsRen86yLBRFcf2Dvgk+
      erXnOM5FFkh55bHT+8RQ/Xfg9F3LFOGA5P6XyqtO9qwTF2lF99+Qk+KjV3vSxR1glDz4tQTA
      1pP7dG2Nt+9sosgSjUqFWD6PbA7pGzbxaOTrAiHYef6Ytg53375LQIZqpUImn0cyepw1hmRn
      Ml9/NOp+Bh7SoF7fDI5bd5l1/qT4eJlrM+r1uZYA6Pd6yJEQlaMdXhw2WcyHeXGwT6k4hxqQ
      2HrygGh+AaN+wECK8dG7txkMBoQTRVpnexxU+wTsHi9e7LF5e5Ht7eegbnK8fcztd98iqPpp
      IJ/RuJZSiHi2yDt3NmjU67SPjugrGvOlGVrNJq1Gg+5gwNHREdFUgVzq/G5QnF+C7hn71T6L
      CyViyRy3F4ocVyvYZp+jkyozcytEgtP7VOfz+rmW35ZisQjAwtIyidwC6XSESrXFxsYatmMR
      jcSIJVMEA+pXz7mSYxGbWWI1FeH4rE6hWESTJdZFinIkTTadJqBq1+GOzwQzvVkg8xQZ27XW
      sm3UEbIHr1OnKIrrZ3rbOa8Fkj2kCSfFR6/2nItiOGWEDNkUPy84F3+86LysIa5L9+afqzT2
      ayMu/ryaKw4AB123CIXOH026zSqmHELvdZkpFhmtNk6g60NCoZA708f/wlMWyOsFGbfO/ffi
      5W2O+1y92nOzsL3iADA4PW0QVHQCsTT3P/klqVSGpq2hYCK0JPGQRLszoN9pUphfonF6SKIw
      j9E+o+8EWSwVOD09Y3l5kdrZEaYSJx4U9HSDQaeDHNAgECYqDWlbKstzM1frks9UccUBILD1
      Bl9uH5GbW2BhZYN0OEhGkbh37ymRTJ5EwGJhdZmtZ2VsSaBoKfZ3t1GxUbUgDgUAHFPn3v1H
      aIkC8aDD2uoc1VYEu1UlFBoy0DvsHTYpzs28slTCx+clVxcA9pB7Xz5kbvMuxU6HeDpJIqwS
      0VRkJUBpJo0US5FLRoiFw8TiESKxFJWjAxKFBRIhGUk6fwK0+k2e7NjMFPJI4RTZdJRoOEw+
      q4CtghC0LZ1MNnOpF0Q+N4/pzQLV/gOycF8K4TiOp/qay+gkWXYduI4Q50tgD1mgifHRoz0h
      BAJGypBNbwBMeaHYTfDRL4a7DCe/Bx7KodWL0t1x6RQhuKhrdoX88ntrjOc6bh+92pMu7o5v
      bDFcvV4mHE4TDn89utu1M5xgipTS41gPY3bKzM8toCgyRr9NpW0yV8wCJsfHDUqlwncbGR54
      SoN6XUNMiu46bL7JumsJAMuyaJwd8rBaI5PP8uzBE979wbt8/stfMn/7I1LzIZ48vMdg0Eex
      DU6qTfKFAqZh8kef/icyy7cQzRrH5QrpgM69/TbvLac46QX48UdvX4dLPhPK2Ivh9G6TvYNT
      DNskGApjDE2SsSCnpydosSzxaBCA1Vtvs7k8hz40iIRDDIdDbNNACydJxsIEtCASDq2eTlg4
      aPEk/XqFoZeXvz43lrEvgh3bwrAcgpqKPtAJhkIMdR0tGMI0dJRAkIAiYQsJhIMswUA3CIWC
      CAGmMURWAwjLRFIDSMLGdiRUBUxbEAoFcfy2KD4jMr1ZIOwRSy2+jmlZBDw0Y/Kqu45iuEnx
      0as9vxgOoP8AhOFaJtsOjNBR7HXpJMcBD6lMyRHnSQ4PATApPnq2JwQIMZLNsQaAYw559OgR
      yZlF5ovZ7/xGMAcdHj55Tq60zNzMq97uvmy9KF34fOF05Q88ZYG8Fm6NW3eZxduk+OhV98Zu
      iXSMIanZRbrlU2pBmbAsY9g6B0d11peLvNg5YnZxhYjZJ14o0KxViEp9ztoO+YTK8VmdhaV5
      Tnb3ycwv068eEYqnuHfvPvNzBSqNIT/+8Y/wd0T6jMqYH4EEz+5/SmJmjVizxonukAoKutUd
      djWFTGmBTrtLJCzodbsossKDh49Qgxkgxfx8lspZjVxpntbhM56XB5RKATY2NpibzZBqWmgK
      OH4myGdExhoAciDER//Nb2D0OmB2kJwEsZhFMr9APpslEo9gaioBxcI6OCKaK7Gxtkal45DP
      5YiEA2SzISKRCIGFNSx5n1AqiaLXafYdWvUT8oXspWrlfW4W15YF6vd6BMMRFC+pmldg2zZS
      +8+RGXrQOiO11X5tOsdBlmTXa1nnIgvkpRhuUnz0au/lfIBR6qSmNw065YViN8FHvxjuMuz/
      Y7CbrmVjLxTjolDMJZfJAk2Kj56L4VxY+1oAbD2+R7Mv2Hz7LtGAgiR12N8XLC4mueg1d96w
      1O5TbkuEFZNIMoksBJIs8/zBF7R7fQorbzGfiyNJ0q8aowqBQEKSBEJAo1YhkSmgSOf/v1op
      kwiFaRgGxWwWvnH8y8/69W+Rp8+fcWtj86u/FxfnAYCjgzPwdPFG3E/9+nQeuHQx3KT4eMX2
      vhYA6XSaeq9C+WCLerNHKhdh71GFYPgO28+fMF+a4U//9C947+P3KVcsCsU42fIeX+x2+J3f
      /tnFL6KC0a3yB3/8//D2T/8G7b0t1GQatXfCs6rEndkAHSWLNqiSXhbsf/FnGLElIk6HxZVN
      TssHnJ1lcLpt+gRIhwSDgU44kaPf7xDSIiRmZhg0KwgkHn7xCf2BiaIpNPQAv/XTD91fMZ8b
      y9fupENjiGRbWA4I4aCoGvPzs/T6Q5bWNglJcOv2OtFknpgmoyoK8UyBiNSnb0IklePDH/6I
      dFhh7c4dJMPAtm20gApanPlcikxxDrPXoVAqgjMglJgnk4gyW8yBpLB66y2yiQiKIqPICsJx
      QAoQCgYQQhAMBzneeU67b6EqKqqqICSF3Mwskt5hOHUrGp+r5IoXwSb1+oBMJuH5E+r1OplM
      xpXGtm2ko3+CbLdc2/P2tHo5HR60XnUvtZPi41Xb87NA32BSMiQ3wUc/C3QZGn8MQnctk70W
      bnnVee2BLy6K4bxkkCbER6/2zhfPo2WQ3oAAEGw/fUjHkNncXEMIiISC36v49ccix9Cx1BDa
      N69T608nohhu3L3zYXJ8nLpiuO9CDsa5VYqxt3tAMpNg99kxgUQezWpx2nFYn02yd1Jj8+7b
      xIIq7XYHs9/ksNIjJXU5lHLcSstUeoK37qxftzs+E8S1zAf4NoaD8x4+7VoZJTmD2WnQtxWi
      msRZrcn6YoFKtYXj2Oi6TrXVZzmjIiJZ1tZWqNbqHL3Ywv1Dj89N5o0IgAAGp11YX11kbmmN
      iN0hU1qkc/KChztnrC0vcFDusTCboXy8T3qmxPJ8kbIRZnV1kfbRHvl8no2338KfEODjhunN
      AulPkYXlXuvYKLL7p8/L6GTZ/XZBR5y3DveyJXJSfPRq77wznEAeYeH9RqwBrgRtzlMSWVgW
      eNiH6llnW6AouD1Z4ZynQb1kVybGR6/2hINwxIXN7+eNuAN8M99rmSZKIPC1y+XYJo1mh3gi
      cfGW+Lt/8LbfFcJnRN6INcDR0REgGA6HmMMhp0dH9Ic6ljnkrFzFEbD/4imVRpPK2Sm7u/v0
      dINGtUy7O2BoGPR6PWzTwHKuPZ59Jog36BHIYXd7n0jAotXXOWr1SUodtvfPeO+nv8PswiJP
      njxHlVKYls3hwQGtk12aTozVuTS9RgUlXmD91ro/H8BnZN6IALD1NvcebaFaXY6aFvOLi8TN
      PjgqhTmNWFCm225iC1ADIfIzGQbdCv1GgmwwSkSTCC2sU683CckStvvZeD43lDdiDfC6sW0b
      qfyvkJ2ua60jhKfMymV0kiS5LxTz3hx6Ynz0as/NtZneAJjyQrGb4KNfDHcZyv8aRM+1THEE
      XnoqetXJzkXRlqf5AO51MDk+erUnCZB4w4vhDraecNbosHbnfdLRAMN+G1uNEdFkQOfwoMP8
      QopP//MnqMkc77+16c5A/6GnYrhxF6d51V1mS+Sk+DiOa3NNAWAzsFQ++vADnjx9ynazR6GY
      RgoOeHi4z8zCLP2uAByiiRyGY3K0+4yTWodiIcvRwQloQTK5HK3jXZTkLJlEhIBjU1ha9Afl
      +YzMNb0HkLGGXQ73d1DDCTIzC8RUi1azTSqfp9f+1WijbquM6Si0ujqZRIR2b8Dt9RVmljYJ
      OC0q9QGKJGjWKhwen3nZQ+1zg7m2RbCp96i1B8zkM5imgyxZCEmlUauRymYRlkMwpGIYNjgW
      DoJW+3x7pQzYKOBYDLotbCWM6gwxhUomk/TnA/iMzPRmgew6sof7gWWfb7Yfn2788wEmxUev
      9vz5AABWC/DwRsy2QXjYi+RRJ9k2CBm3y1rJcS62Pnl4ip0QHz2f55s6H+Al7doppy2D9ZWF
      V3+DCUGn2yUaDtId6ISCUTTtVxel3+8TiUT+qu709z1lgbxeEK+665gPMCk+erXn5tqMPQCc
      YZu9So/l+RmG/T61RgNNcWjqMqVMhP2jM+ZmstQ6NV48q/Mbv/Vj+q0yL7b6zC3m2Hq8zcLt
      ddrHe0QLiwzaNdLpNEavQdPQWF8ujdslnwlm7AFgDw3C0RD37t1nMZeBzAydygEHexXE+jyF
      TJZqvYqWSbG5mSekSDjRGL3DFpoC+bk5WqfHtLoDDprPiFo1htIHyL02+wd1FpZLfjGcz8iM
      PQ0aiGeQeg2CkTixdI6ZTAI1oJLJ50mls8TiUZLJNNFQnHbtAN0WtHWHj95eoTeUSSXjpFIJ
      AoEA+VyWlTsfEpEHqKpKNp97M+q7fSaG6c0CNf4QWbhvjus4jqf6msvoJFnCbamYIxwkvM0H
      mBgfPdpzsyVyegNgygvFboKPfjHcZTj6p+C0XcvG3jvfo06+RHPQSfHR83wAcXFZRpBeawB0
      jo9xikVqu9usrr66odWzB5+RKG1SzMSAVzTONcue0qDj7td/bfMBfB1wzQHgWAPuf/45ek9H
      MTr84uEhP3z/FvWhhKLXicYSBNNF7F6PpYU8khalXa/SOdnCkDSOD/dZXV7gk8/u8c7HP6B9
      0uG9j98j6M9J9RmRa06aBHjr/feZn8nQ6enMpIMMHY3NzXUSmQJrm7epPP+SeGGWfrPM8VmD
      09MzpEiSu3fukE3FME2LucUVYmGNlfVbRILT+1Tn8/q51kXwr5s+n+wHsvyytalAsgY83Dnl
      7ubqr/a5XSBJEo5jgyQjHAdJls8rAyTpoi3KP/JUDDdJvfO96F5qJ8VHfz6AB25ChuQm+Ohn
      gS5D5xcgDNcy2bHBQzs+rzrJsS+KtlwWw128B/CUQZoQHz3bEwIQIxUKXmkAWP02w0CcaODc
      cWs4ZCgE0VDoq2OEEOzs7LKyssiLrT2WF+cY6AM0LYQS0Ah8Y1CyYQzRtK/PDzCHBkpQ+/qC
      pvb/TsR8gOsohpsUHyd+PoDVadJJxHBaddRkjFalgiHZGNEUZ0d7JAqLzGYTHO9tk83G2do/
      JR1VaQ0t4moAW9WIpnNY3RrlkxPihUVkW0cVBvUBZFMxQrJMs9MjmY2xs33E5p07BPwkkM+I
      jCUL1K5U6Pa7VBtNnj55inAMWj2d51vbABRnszx6uMtMMcOg18MWYOk6TlDj8PGXNOo1pMQC
      jcoxw+GAx4+e0GjUaTca7FdqmL0eB4cnrN+6heahi4DPzeVK7wBqPMHh4y+Zmy1yvHdCcXaW
      pZUF9IFBPBKllM2DJFEoLRNODAiHggRkiEkKAeFAOI7I5JidL7H15DHJVJZWq8utWxtU+7A4
      l+e0bRIPgBZSefHsGZu3b+O/BvAZlYnKAjkXM4y1wPfHrW3bSN1PkHG/CLYvtu+NUyfLsusM
      iXOxJdJLMdyk+OjVnrjYEjlKhmyiAmBUbkKK8Cb4OIFpUIFtnb+ckpXzF1Mv4+v7nBeOg+04
      33mRxEVvSVfs/q6/JfI7mBQfvdq7xiyQzeef/BJL0XjvvffBMQmIJru1CMulOMI2EZKCIoNl
      6pyV28zNz/L8wecMpSDrG7dQhEUgGMQ2DSQlgCRstnf3WV9bYTg00DTt4tsPbEegqQpDw0IL
      KBiWQ+irEasXuWCXvMmFW69Ddx0232Tda18EO7aJIwc5O3hBZ2CiKSa1ToB+U+Z4+zFWtMR8
      WiaeyXC4XyU/O0u+UGDnqELzZIujep9YJEpvMEBRNVSrS8dSCLx4Sq3VIprK0mtbJLQeP39w
      yE/fX2HrVGc5r3DcUvhvf/KD1+2SzxTz2tOgpaU15vIpZFVF13WC4Ri2paOFwhRK86wtz5Et
      zrO2skpUEziOYDAYAA5CCbF56xaxcBhsEzWgXczCUpAQ6MYQSQ1za3MNJJXV0gzRdI6gPSCc
      KiCbfcypW9H4XCUTswiunR5wWO1y+/Ytgur3x61t20jH/wzZw4YYT+uNS+rwOh/AW3PoCfLR
      o72Lf/jzAaY4Q3ITfJzALNAbxMH/CU7LtUz1WIPrVad41F1uS+R4dV599GrPqAwZBv8Oyffe
      frUN9x9/ORrlfXbKQ37w9gYAZ/sHpBYXkAddjmotlufnvna8EAbPnx8SkGwW1jdGf8trt8Fu
      uj6/Nzlj8Tp012Fz7D4aA4RsjnTo2AOg3tKJa4KDrYd88aLO+2t5vvj0EzKpPMLp8+//7/+f
      xPxtVuZmUTBZXlklLNp0gyX2nt6j2hwQjkVYXpzlpN6mvH1KJJsk6PSptkx++ps/ue5tbj4T
      xFh/V4StUy6XqZbLGEqUoNmhT4h33n2PgGwCEqWlDVaXlggYdexgGkmSKObTJDP5rz5HkRwe
      P3yEYTssrt0hn4xg2zZTuJzxuWLGegeQlBA//unPvvrvteXlr/59efX8kYhNAIcXzzosFVMA
      BDJLlABuv8vat32wSGEbA5R4CBVwAOSwpw0xAuG6gdNldXhQXm5L5KT46M0eqoI0Ylt1Pwv0
      DSYlQ3ITfPSzQJeh9Wcghq5lsuOM1Ff+dekkrzohLpo/edkSOV4fx62zeyaW8jHhUvGVx755
      AWAPuX//EUokxe2Nlb8yJXPQrVFpCUppje1ym83l+W//nMYf+VsiX7PNcZ+rV3v22YBhaH5C
      A8AxGNoKgWGfZvWUg5M6c8U0h8dnLKzeQrZNKidVJDNMpzPgeE+nbWnko3DaMLh9+9Ud5nx8
      XvLmBQAQjSfB6vLk0SPUYIhKPczqxgbtTptoEBLhALWeRVRTePz4EdH8EtW9M4LxDEMLgn4e
      1GdE3rwAUEKIYRM1muGdd/PsHFaYnc0TDgZRZBlVFiwsRemYEJBt0tEgdV2luJDjuNZHU/BS
      Be1zQ5neLFD/HjKjvQ38utZBUTwsvC6hO98u6E7nOOctkL1MiZwUH73aswY2lrxJKJd95bFv
      3h3gdRG54ylJLiwLVPeXxbvOBkVxfa7CPt8T/FeyBCPZnBAfPdqTQwJVXPN7AMe26A+GRKIR
      ZElCOA6O4DsjWjg2/YFOMBhEVtTv/Lnato38ipmztj8o+0ajnw3QQ/+A1EcfvPLYK7sDbD9/
      jC2HmF9YwNCHBBSdWlNlbi6FcBzM4QBLSAghkUxE2XvxBJ0gsaBAhPMUM3H6nTahWBxL72Ej
      AzKtygmRbIF0PEq73SEejzHUh0iyzNC0SSZiV+WSzxRyZQHgKEE2NzaoHb7gP/3ic+5++ENE
      e8hJUKLfOEPvtRmYAjkQ5ocfvouJxu3NdaoHzzgpHzAcZNh5+DnhmRWiooNhQTAYJRZR6B/u
      sDO0ONjd5c5bt6g0ZHKRAZW+zE9/9Oqo9/F5yZUFQCwAn332Jcl4iMXlBRRJJhiPcLL7nEA0
      RXF2AQBxsYc/EZb5y8+/ZLaQZmV1lkalTjxXIhIJkE8tgRAowEDv0Gj3yeczOLZEJhUnmSui
      GafUt0+wxDQvbHxeN9ObBTr9l8hOx7V2krYLnm+JHO+5TsKWyGF9iKH9LeJ3Nl957PQGwJQX
      it0EH/1iuMtQ/Xfg9F3LFOGM1Ff+delkzzoXoxC/waT46NWe1TYw1b9BdHX5lcdeTwBYPT5/
      dMT776zy6af3+Pjj814+pt7DUaNYwx7RaBSzVebTZwfkZ0rkEmG0QIBQNHpeXGV1qXQU8ukQ
      zWaLVCr1dRvdzzwVw3mtohi37jJbIifFR686pzzADH0Mb2wAOCa9bpfq0T5doXB2sMX2cZtU
      sEdbKtCv7bN+9wMKss7s6ib98jFd2eBkZ5vE4jpOu0Y4HmZvv0m+VCQRVOjWTzmu67z/g/c9
      VxH63DyurWxstpDk4X6TYkKjVqvRqRwSyZYozpZYmF8gm4oDgu1HXyJHUnR7fWZn5ymkIlhK
      lFwqxtL6HSIq9Lod9vf2EcLCsq/LI59J5HruAGqMucUYhZkBqqpg6X1SxWWymQTVWptcMU9f
      H5JJF/nZTxYx9T6SHEfFpt41WZhJMHA0irkoOBrCESzMF6m2BgS/2hPp4/NqpjcLZJ4i4/52
      YNk2qoee9JfRKa8o7fg27Iv5AF6K4SbFR6/2bNPBJocWf3VVwPRmgXDwditw8LbEvC7dm3+u
      0rivjXBGlr3GAHCo1ZpkshkatSrJdI5vrXsTNt2eTiwW/ZXSGrK/f0RhbvH7J707FrolCGkj
      5IaP/8VEzAcYd8/9y9iclPkA5kUxnDbeYjiL5w8ecPejH/CXf/kZH/3oR5ydVsln4PHTDuHA
      gOTcKgnRoenEmDV71PuCxVKBrWfPyc7O45g6fSeA41gIo0djIJGJKZycNVheWWT/6QOseImY
      6BFOFwkqDgIJvV2j2nWIRzRm50qvzyWfqee1PgJl8zl2XmyRLeTpNOvUD5/gxN5ndjaJKprk
      smF+8RcPCMWzDDsyEWS6xRyOHMBsn3LUtQknspj9Jo2TfXQ1SSkbZyYuc//xHgulEpWTGv14
      ksb+Lkrg/BFgZW6Ght6j3ekwBx6e/H1uKq8xDSqTyhcJa0HmZgsEVIVoKkciHKdVPyAU1jg4
      bTFbyJDOpIgFVRq2RESWyaciHFZ7pLM5etUjhpZMsThLOp0mk80TT2UpZGPs7RwQy2QZ1E/R
      YkkUS6fR1tnb2aHfHxBLxF+fOz43gunNAtX+A7JwXwrhOI6n+prL6CRZdr3Ucy76AnkpFpsY
      Hz3aM1oGZuC3ia4svfLY6Q2AKS8Uuwk++sVwl+Hk98BDObQqRhwt8pp0isdRL/LL760xnuu4
      ffRqz6wPMQL/G/G7t15tw/WnXxK9VeeLp0+JxAvkkmFKpRLtZpNht05wZpXu/hMOWx0KxTWW
      S5m/oj8+PqZUOs/07Oxus7K8+u2Ghgee0qCT0gPfnw/w3YjOADs02uPv2ANA2A7hWAxhmxzu
      HrB/UiWfjhFjiC3AMg2EI0By+Pl//P9wUsukpC6hTJ7GWQUpGGb36UNmNt7HHA75/Of/kYO2
      wtu3loiqMsnZBdzfNH1uKtdQDCcRS6S4fWudQmmZYi6BYfyqf48kKUSiEQbtCkMpiqX3iKTy
      zGcjoIQIqAqpVIJypQKAYQlm81mSQcFBc0hIucx3o89NY+x3gFAqzUo6gyxJLCwsfPX3EoAM
      idUNMoZJKBxmZXEJWdVQ5PPF3tt348hqAGGbSIqGIoNYXcO0BI3yPsuL39Eo18fnO5jeLBC2
      l55RmJZFwEMzJq+66yiGmxQfvdpzHIEjZNQRMkjTmwXqP/A0IUa2Hb69iOlqdJ7nAzjiPEHi
      ZT7AhPjo1Z4zsLDk26j53CuPfc0BICgf7VEfSMzNZIjG4jiDDmYwTvgbKdlup0M0Hv/Ob4Wj
      g31mSgtUj3ZJzq18Qy8u+kae/6UQDrtbz8jPrxMLXbhU+QN/PsBrtjkpOuuiGC40/gCwOTqu
      Mr+2RvXkgBd9i6VcnG5EkFQljvZ2KCyuMqgecVDtc3u9RGdgozcrJEvLWK0ybUPh9q1VWuVD
      iGY4fHKfUjRJOppg2G9TOTkknk7x8P5zPvz4Aw4PDpjJZXm2e4QIJoktzL5el3ymmtecBVLY
      2FzlcG8XkwC35+Octk3u33+M0TkhVlzhbPshPTnBbC7J2VmFmVyURrvP8+fb6JZMMgAGEMkW
      ae/eJ5wuMWyd0ejqHJ+eoes6FhobG5uIYQdDr3PWlLl7+xay7X4kks/N5rU/AlXLZwRjKQr5
      NFpIIo9DaWEWUx/SPt4iv3SbztkBhpZktjRPMBAiFo0Qy86QioVREahAKpUhoKgkY2HsgMbO
      8y2yM0V6jkk4HKXd2sWOFgjFcxRyMUIhEI6/F9LHHdObBWr/OTLu7whj753vOLNqiBsAAAvP
      SURBVMiSl/kA51kgL8Vwk+KjV3tmz8SSPxxpRtj0BsCUF4rdBB/9YrjLsP+PwW66lo29UMy1
      4pzLLN4mxUev9oyyzjD090h+8O6rbXg5Ma84Zpftozat0y3W37pLtT4kE49TqZ1g9VtkF+6Q
      T0Vot9skkkm4aI5qGHWqNY1kuM+9+w/ILL/L5nwWSTLZ26uzuFREEufzyL/6RnR0cAauz1EC
      TzPGLqXzwKWL4SbFRy/PJ/YAYY+2L3CsASAHoojhLslkiu1nRyzeKXG22wZJp1xuIvGU/eME
      YcXBePAJX263+NlP3qLVapArvkM0kaYwt8pCVuXf/5v/i7UPfoZ+ekSlUSNi1fhiu8P/+rf+
      x+vr9uUzcYz5EUhCHg7R5jcoP/qSRHCZumIiq1HWbt8mroKSW+B07wWBVJb33ymd/zLLCoos
      sf/8IScNE8cxWFy/Q8CxyK/dAoY0znosFzUsQBuvUz4TzPQugo/+CbLdcq292LoxVh0etF51
      L7WT4qMXe3p1iBH82yTefeuVx05vAEx5huQm+OhngS5D449B6K5lstfCLa86jz3wJXFRDOfh
      O3JSfOzvyiQ/+p9c69ww1gA43t8mlpsnETl/Sq/X62QyGXq1M0jOEP3G2VjdGp893SObL7G2
      +OqXGl+j9acTUQw37t75MDk+Du5rUxQAwqLT6TIQNVp2m4EUZdg8Zms3zFJaxZZDbO3vks7m
      SGfSDPomCaeLJWvoep+T/S2qPSimNBp9B2dQYyjFKGVCnFQH5DNBah2bu7fXxuaSz+Qztoyh
      3qlzeFrn4GAfgE6rSSSZZz4TxwTKey+odgfYQvD43j3kUBCQmVtaRpgDarU6Ry9eUO/pLC4v
      EIqmScc0Hj96zHDQYWjDoN3E8MuBfFwwtjuArIb52V/7a1iDDp12g3QmwUw2gQIIbDIljZ1n
      z4mGg1QDUdLRIEJNUX/8nJmFVRS9TiQ1S76QRlNk8oUCEpCKh9k/bZOMhNAzOYISOFO3rPe5
      KqY3C6Q/RRaWe61jo8geetJfQifL7rcLOuK8dbiXLZGT4mO/Kogsv+fanp8FAtDmvLWWtyzw
      sA/Vs862QFFwe7LCOU+DesmuTIqPSubq2xxfXwAIm3qtQTieJBz89lzvoNtm6CikEtGv/b1t
      WQhZRv2+lNzB/+HPB3jNNseta/y5RvF//+ce1aNxfQFgNNk5rIFzxFt312m2BuSyCRr1JrFk
      hoDV5snOGdlMmlhIodbsks0kqNWaqMYQPSATjKZRhj3kUBQNk47ukM+lr80ln8njWh+BsjMl
      lNYxx+UjHn35mLVbdxACGl2HYnBIcX6G50+30VsVtGCAZ2fHHFY6vLVcwrb6tBWF5m6DYLSK
      JGz0vkk6l/aL4XxG5vp+V2SVk50n1B2ZoAPF0iyhUJj5+XkSkSDx4gxn2zsEtRDxaJhqo0s6
      lycRVnAUlWAoSiigUVqYJ5tOIkydRqd3qTJhn5vHdGSBhGB/+ylGIMna4iyObSOV/xWy03X9
      UY4QnjIrl9FJkuS+UMx7c+iJ8bH+QCXzO3/fvT0XWaDpCIBvcBMKxW6Cj34x3GUo/2sQPdcy
      xRF46anoVSc7F9v+PM0HcK+DyfGx80gh89/9Xdf23HBlAXB2VmZmpjDSsZ3aKZ/ee8zi2m3W
      Fn+tsVW/wpmTYSb2fZEsLmzN0G42iaVSF9qHntKg4y5O86q7zFpnUnw09q9+a9OVBcBgMOBo
      +zFPj7uslxKclasINUypNMv+1jNyc0tUD/dZffsHFLNFiqUma3M5PvvFX6Bl5lEHVWKRACdG
      D6UQZW97h2gqQzwepV5tkM0mqZePUBMlFKNFXzeRJYdEKuVPifQZmSvJAnWaNboDnXqzRa9W
      YyAHeWttjoWldbrtCj3dBkkiHFSp1epf6cyhTt8wqVbKaLE0c4U07WYDY9hBieUwTJP68T5q
      QKLaGhANh6hWqxjDPv2BQa/vfhO8z83mSu4AjhCsrKyC0aW4JJGIRwjIEEAhl7pDLlMjGE2g
      RzSiqTwAK8srqFqA27fuEozGCAZUJAV+44dz2OaQkNYmGJ9HdgxUVcN0wNY7pGaDREMajm0j
      PJQF+NxspjcLZNeRPfTUsGwLVfHSA9+rbvzzASbFx2HXJphx3+zYzwIBWC08zYy3bRAeKm08
      6iTbBiHjdlkrOc65xMtdb0J8NModuvd33NvTAiR/+IORjh1PAAiHvm4QCYe+97B+v08kEvmO
      j7DRDQtZWEiBMJr6ih/86e9PRDHctXSGG7POq48nv/eUrd/fcq3TZmf4zae/GOnY8QSAY1Gu
      1Qk6A5xQhpDoUWmbLMwk2Nqvkk85PN0aMFMIAgGWl2Z58WKfjY0l9vePSOZL5KIqlXqLkN1B
      SpSoHu6xvHGL6uELnFCGhDrkpGlxe3N5LC75TAdXHgBCCBAOZr/DQA4gtY5oairxkEa91kSv
      bdPMfMDG+hyD3gmxZITKaQW9W+bZUwOtsE63WSEXLXKw/QzbtkhmhswvLrF9/z+j5N9G1I8Y
      aEE0y8LmOgucfCaNMdwBBE8fPyS3sEntaBsnnGImHUNVJIa9DuFEjmQ4SmV3l5n5EvGISt/u
      okWSpNMZIskIBJNIisqdd94n4OgMbZm9F8+YW7rD8/tfICIpknqH3YbJ8t07V++Sz9Qw2Vkg
      x2Jvd49UYY5hu4KjxSnmUudZoMYfIovRpoV/7SMdgezhdf9ldJLsvlDMEQIJyVsx3IT4ePpn
      Z9R/WX/1gd9AjcdY+4f/wC+Gm+ZCsZvgo18MdxmO/ik4bdeysffO96iTL9EcdFJ8bH4WIP8/
      /65rnRveyAA4OTykMD//remzQa+DpEUIBRTA4PCwyfz8txTdmWVPadBx9+u/tvkAE6CzmxNc
      DHcZLMti5+kDGvU20WQW3RFEpCG1Wou55QUsBxqnpySL81R2tjmrVQiKAX1D4p0PP/Tbo/uM
      zBuXMawc73HW7OFYNookMGyZO29tYpsmknCwbBsLlTtvv4OGxdzKJrlEGNu2QVh+UywfV7xx
      d4BscYFsUUKSxEXWQQYJEvEYQ8IsLa2hXtxTo9FftUtZWFpGAIp8/sb+PLY99Mxhcnrne9G9
      1E6Cj3howuWWqc0CvRwj6hbHcTxlVsate/ljm2Yfx3Ft3rg7wOtCURRPF8+yLFQP3c+86mzb
      RpZl17/IzsVQ8Gn20au9G78p/jLfjuKig8E4deD+XG+Kj1dtbyoDwMdnVN64LNDronK4w3/5
      +c+pdc2RNeXjHZ5sHbq2VT7c4ZNPf0G1bbjSmYM2X3z+GY+e77q3efSULx7tu9a9eHyPL+49
      ZGi6G6Rwtr/FZ198yWD0ywmcz4X44rO/5BefP3Slqx7t8cmnv+Sg7G7QoW32+fyTX/Lw2Wj7
      CKY2AHpDh49/eIf62ejT4gulOUKK+0uSK5bIpjKEg+6yFoFwgqgmIbvcZWUbfToGhDykZGz7
      omW8S225UkESAtNyFwGheIbV+QJLK6uudBIOlmUjPOSdhIDyWZlRQnxqAyAgmXzx2RMi6djI
      mrOjfXZ2dujq7n7Ij+9/QWdgYDvudqDp3SYmAfpddx3sjEGfRr3O/vGJy/cegng8iTXs0nP5
      VZ5MpZAlm1bbbYGh4Kw1oJD8/s1Q32QwcAiHNfpdd/ZkJUgqFSWZSo70yz21awAhHEzTIhAI
      jLyQskwDyxZomuaq6vGlLqBpKC50QjgYhokaCKC4zub82nsSF9i2hW2Li+viwppwMAwLTdNc
      lvV4O0/hOBimSUDTXO17FkJgmgaKOto1ndoA8PEZhal9BPLxGQU/AHxuNH4A+FwvwqHXGyCs
      Ib2L5INjWwz04VjMT20phM+kIPiTP/kT3pkNUc+9R8rpkIkH+C8PdvjrP/kYw4Z+o4yWyJOK
      ucskjYIfAD7Xi6SQCKl8eTrkJ/ky//YP/4jlzY84OXzE0VKRZzu7PLj3mIWNd/hf/offfO0T
      gPxHIJ9r563VElYwjdHrMbe2SToeZX62yONHT0hkiqwvL3JrbelKbPtpUJ8bjX8H8LnR/FcO
      rIxTN6/aDAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PlayersAssist' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Shot on Target Players' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team Embed URL' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
